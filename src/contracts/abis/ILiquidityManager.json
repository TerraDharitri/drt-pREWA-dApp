{"abi":[{"type":"function","name":"addLiquidity","inputs":[{"name":"otherToken","type":"address","internalType":"address"},{"name":"pREWAAmountDesired","type":"uint256","internalType":"uint256"},{"name":"otherAmountDesired","type":"uint256","internalType":"uint256"},{"name":"pREWAMin","type":"uint256","internalType":"uint256"},{"name":"otherMin","type":"uint256","internalType":"uint256"},{"name":"deadline","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"actualPREWAAdded","type":"uint256","internalType":"uint256"},{"name":"actualOtherAdded","type":"uint256","internalType":"uint256"},{"name":"lpReceived","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"addLiquidityBNB","inputs":[{"name":"pREWAAmountDesired","type":"uint256","internalType":"uint256"},{"name":"pREWAMin","type":"uint256","internalType":"uint256"},{"name":"bnbMin","type":"uint256","internalType":"uint256"},{"name":"deadline","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"actualPREWAAdded","type":"uint256","internalType":"uint256"},{"name":"actualBNBAdded","type":"uint256","internalType":"uint256"},{"name":"lpReceived","type":"uint256","internalType":"uint256"}],"stateMutability":"payable"},{"type":"function","name":"checkEmergencyStatus","inputs":[{"name":"operation","type":"bytes4","internalType":"bytes4"}],"outputs":[{"name":"allowed","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"emergencyShutdown","inputs":[{"name":"emergencyLevel","type":"uint8","internalType":"uint8"}],"outputs":[{"name":"success","type":"bool","internalType":"bool"}],"stateMutability":"nonpayable"},{"type":"function","name":"getEmergencyController","inputs":[],"outputs":[{"name":"controller","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"getLPTokenAddress","inputs":[{"name":"otherToken","type":"address","internalType":"address"}],"outputs":[{"name":"lpTokenAddr_","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"getPairInfo","inputs":[{"name":"otherToken","type":"address","internalType":"address"}],"outputs":[{"name":"pairAddressOut","type":"address","internalType":"address"},{"name":"tokenAddressOut","type":"address","internalType":"address"},{"name":"activeOut","type":"bool","internalType":"bool"},{"name":"reserve0Out","type":"uint256","internalType":"uint256"},{"name":"reserve1Out","type":"uint256","internalType":"uint256"},{"name":"pREWAIsToken0Out","type":"bool","internalType":"bool"},{"name":"blockTimestampLastOut","type":"uint32","internalType":"uint32"}],"stateMutability":"view"},{"type":"function","name":"isEmergencyPaused","inputs":[],"outputs":[{"name":"isPaused","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"recoverFailedBNBRefund","inputs":[{"name":"user","type":"address","internalType":"address"}],"outputs":[{"name":"successFlag","type":"bool","internalType":"bool"}],"stateMutability":"nonpayable"},{"type":"function","name":"recoverTokens","inputs":[{"name":"tokenAddressRec","type":"address","internalType":"address"},{"name":"amountRec","type":"uint256","internalType":"uint256"},{"name":"recipient","type":"address","internalType":"address"}],"outputs":[{"name":"successFlag","type":"bool","internalType":"bool"}],"stateMutability":"nonpayable"},{"type":"function","name":"registerPair","inputs":[{"name":"tokenAddress","type":"address","internalType":"address"}],"outputs":[{"name":"success","type":"bool","internalType":"bool"}],"stateMutability":"nonpayable"},{"type":"function","name":"removeLiquidity","inputs":[{"name":"otherToken","type":"address","internalType":"address"},{"name":"liquidity","type":"uint256","internalType":"uint256"},{"name":"pREWAMin","type":"uint256","internalType":"uint256"},{"name":"otherMin","type":"uint256","internalType":"uint256"},{"name":"deadline","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"amountToken","type":"uint256","internalType":"uint256"},{"name":"amountOther","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"removeLiquidityBNB","inputs":[{"name":"liquidity","type":"uint256","internalType":"uint256"},{"name":"pREWAMin","type":"uint256","internalType":"uint256"},{"name":"bnbMin","type":"uint256","internalType":"uint256"},{"name":"deadline","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"amountToken","type":"uint256","internalType":"uint256"},{"name":"amountBNB","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"setEmergencyController","inputs":[{"name":"controller","type":"address","internalType":"address"}],"outputs":[{"name":"success","type":"bool","internalType":"bool"}],"stateMutability":"nonpayable"},{"type":"function","name":"setMaxDeadlineOffset","inputs":[{"name":"offset","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"success","type":"bool","internalType":"bool"}],"stateMutability":"nonpayable"},{"type":"function","name":"setPairStatus","inputs":[{"name":"otherToken","type":"address","internalType":"address"},{"name":"active","type":"bool","internalType":"bool"}],"outputs":[{"name":"success","type":"bool","internalType":"bool"}],"stateMutability":"nonpayable"},{"type":"function","name":"setRouterAddress","inputs":[{"name":"routerAddress","type":"address","internalType":"address"}],"outputs":[{"name":"success","type":"bool","internalType":"bool"}],"stateMutability":"nonpayable"},{"type":"function","name":"setSlippageTolerance","inputs":[{"name":"tolerance","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"success","type":"bool","internalType":"bool"}],"stateMutability":"nonpayable"},{"type":"event","name":"BNBRefundFailed","inputs":[{"name":"user","type":"address","indexed":true,"internalType":"address"},{"name":"amount","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"BNBRefundRecovered","inputs":[{"name":"user","type":"address","indexed":true,"internalType":"address"},{"name":"amount","type":"uint256","indexed":false,"internalType":"uint256"},{"name":"admin","type":"address","indexed":true,"internalType":"address"}],"anonymous":false},{"type":"event","name":"EmergencyShutdownHandled","inputs":[{"name":"emergencyLevel","type":"uint8","indexed":false,"internalType":"uint8"},{"name":"caller","type":"address","indexed":true,"internalType":"address"}],"anonymous":false},{"type":"event","name":"EmergencyStatusChecked","inputs":[{"name":"emergencyLevel","type":"uint8","indexed":false,"internalType":"uint8"},{"name":"operation","type":"bytes4","indexed":false,"internalType":"bytes4"},{"name":"allowed","type":"bool","indexed":false,"internalType":"bool"}],"anonymous":false},{"type":"event","name":"LPTokenOracleRegistrationFailed","inputs":[{"name":"lpTokenAddress","type":"address","indexed":true,"internalType":"address"},{"name":"token0","type":"address","indexed":true,"internalType":"address"},{"name":"token1","type":"address","indexed":true,"internalType":"address"}],"anonymous":false},{"type":"event","name":"LiquidityAdded","inputs":[{"name":"otherToken","type":"address","indexed":true,"internalType":"address"},{"name":"pREWAAmount","type":"uint256","indexed":false,"internalType":"uint256"},{"name":"otherAmount","type":"uint256","indexed":false,"internalType":"uint256"},{"name":"liquidityReceived","type":"uint256","indexed":false,"internalType":"uint256"},{"name":"user","type":"address","indexed":true,"internalType":"address"}],"anonymous":false},{"type":"event","name":"LiquidityRemoved","inputs":[{"name":"otherToken","type":"address","indexed":true,"internalType":"address"},{"name":"pREWAAmount","type":"uint256","indexed":false,"internalType":"uint256"},{"name":"otherAmount","type":"uint256","indexed":false,"internalType":"uint256"},{"name":"liquidityBurned","type":"uint256","indexed":false,"internalType":"uint256"},{"name":"user","type":"address","indexed":true,"internalType":"address"}],"anonymous":false},{"type":"event","name":"MaxDeadlineOffsetUpdated","inputs":[{"name":"oldOffset","type":"uint256","indexed":false,"internalType":"uint256"},{"name":"newOffset","type":"uint256","indexed":false,"internalType":"uint256"},{"name":"updater","type":"address","indexed":true,"internalType":"address"}],"anonymous":false},{"type":"event","name":"PairRegistered","inputs":[{"name":"pairId","type":"bytes32","indexed":true,"internalType":"bytes32"},{"name":"pairAddress","type":"address","indexed":true,"internalType":"address"},{"name":"tokenAddress","type":"address","indexed":true,"internalType":"address"},{"name":"registrar","type":"address","indexed":false,"internalType":"address"}],"anonymous":false},{"type":"event","name":"PairStatusUpdated","inputs":[{"name":"otherToken","type":"address","indexed":true,"internalType":"address"},{"name":"active","type":"bool","indexed":false,"internalType":"bool"},{"name":"updater","type":"address","indexed":true,"internalType":"address"}],"anonymous":false},{"type":"event","name":"RouterAddressUpdated","inputs":[{"name":"oldRouter","type":"address","indexed":true,"internalType":"address"},{"name":"newRouter","type":"address","indexed":true,"internalType":"address"},{"name":"updater","type":"address","indexed":true,"internalType":"address"}],"anonymous":false},{"type":"event","name":"SlippageToleranceUpdated","inputs":[{"name":"oldTolerance","type":"uint256","indexed":false,"internalType":"uint256"},{"name":"newTolerance","type":"uint256","indexed":false,"internalType":"uint256"},{"name":"updater","type":"address","indexed":true,"internalType":"address"}],"anonymous":false}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"addLiquidity(address,uint256,uint256,uint256,uint256,uint256)":"2563e426","addLiquidityBNB(uint256,uint256,uint256,uint256)":"b1e12e58","checkEmergencyStatus(bytes4)":"8aed668a","emergencyShutdown(uint8)":"eb1676c1","getEmergencyController()":"c993cc9d","getLPTokenAddress(address)":"4939ea4d","getPairInfo(address)":"d4ff73f7","isEmergencyPaused()":"290d10c4","recoverFailedBNBRefund(address)":"c053ed44","recoverTokens(address,uint256,address)":"61b0a56e","registerPair(address)":"dc314b44","removeLiquidity(address,uint256,uint256,uint256,uint256)":"13928082","removeLiquidityBNB(uint256,uint256,uint256,uint256)":"48790d0d","setEmergencyController(address)":"6ca7dc89","setMaxDeadlineOffset(uint256)":"9ba5b5a1","setPairStatus(address,bool)":"5a0d1229","setRouterAddress(address)":"41cb87fc","setSlippageTolerance(uint256)":"117da1ee"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"BNBRefundFailed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"}],\"name\":\"BNBRefundRecovered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"emergencyLevel\",\"type\":\"uint8\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"}],\"name\":\"EmergencyShutdownHandled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"emergencyLevel\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"bytes4\",\"name\":\"operation\",\"type\":\"bytes4\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"allowed\",\"type\":\"bool\"}],\"name\":\"EmergencyStatusChecked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"lpTokenAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token0\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token1\",\"type\":\"address\"}],\"name\":\"LPTokenOracleRegistrationFailed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"otherToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"pREWAAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"otherAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"liquidityReceived\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"LiquidityAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"otherToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"pREWAAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"otherAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"liquidityBurned\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"LiquidityRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldOffset\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newOffset\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"updater\",\"type\":\"address\"}],\"name\":\"MaxDeadlineOffsetUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"pairId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"pairAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"registrar\",\"type\":\"address\"}],\"name\":\"PairRegistered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"otherToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"active\",\"type\":\"bool\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"updater\",\"type\":\"address\"}],\"name\":\"PairStatusUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldRouter\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newRouter\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"updater\",\"type\":\"address\"}],\"name\":\"RouterAddressUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldTolerance\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newTolerance\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"updater\",\"type\":\"address\"}],\"name\":\"SlippageToleranceUpdated\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"otherToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"pREWAAmountDesired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"otherAmountDesired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"pREWAMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"otherMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"addLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"actualPREWAAdded\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"actualOtherAdded\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lpReceived\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"pREWAAmountDesired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"pREWAMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"bnbMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"addLiquidityBNB\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"actualPREWAAdded\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"actualBNBAdded\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lpReceived\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"operation\",\"type\":\"bytes4\"}],\"name\":\"checkEmergencyStatus\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"allowed\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"emergencyLevel\",\"type\":\"uint8\"}],\"name\":\"emergencyShutdown\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getEmergencyController\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"controller\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"otherToken\",\"type\":\"address\"}],\"name\":\"getLPTokenAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"lpTokenAddr_\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"otherToken\",\"type\":\"address\"}],\"name\":\"getPairInfo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"pairAddressOut\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenAddressOut\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"activeOut\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"reserve0Out\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserve1Out\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"pREWAIsToken0Out\",\"type\":\"bool\"},{\"internalType\":\"uint32\",\"name\":\"blockTimestampLastOut\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isEmergencyPaused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isPaused\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"recoverFailedBNBRefund\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"successFlag\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddressRec\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountRec\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"recoverTokens\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"successFlag\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"}],\"name\":\"registerPair\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"otherToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"pREWAMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"otherMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"removeLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountToken\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOther\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"pREWAMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"bnbMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"removeLiquidityBNB\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountToken\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBNB\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"controller\",\"type\":\"address\"}],\"name\":\"setEmergencyController\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"offset\",\"type\":\"uint256\"}],\"name\":\"setMaxDeadlineOffset\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"otherToken\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"active\",\"type\":\"bool\"}],\"name\":\"setPairStatus\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"routerAddress\",\"type\":\"address\"}],\"name\":\"setRouterAddress\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tolerance\",\"type\":\"uint256\"}],\"name\":\"setSlippageTolerance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"BNBRefundFailed(address,uint256)\":{\"params\":{\"amount\":\"The amount of BNB that failed to be refunded.\",\"user\":\"The address that should have received the refund.\"}},\"BNBRefundRecovered(address,uint256,address)\":{\"params\":{\"admin\":\"The address of the admin who initiated the recovery.\",\"amount\":\"The amount of BNB that was recovered.\",\"user\":\"The address that received the recovered BNB.\"}},\"EmergencyShutdownHandled(uint8,address)\":{\"params\":{\"caller\":\"The address of the controller that initiated the shutdown signal.\",\"emergencyLevel\":\"The emergency level that was handled.\"}},\"EmergencyStatusChecked(uint8,bytes4,bool)\":{\"params\":{\"allowed\":\"A boolean indicating whether the operation was allowed to proceed.\",\"emergencyLevel\":\"The current system-wide emergency level at the time of the check.\",\"operation\":\"The function selector of the operation being checked.\"}},\"LPTokenOracleRegistrationFailed(address,address,address)\":{\"params\":{\"lpTokenAddress\":\"The address of the LP token.\",\"token0\":\"The address of the first underlying token.\",\"token1\":\"The address of the second underlying token.\"}},\"LiquidityAdded(address,uint256,uint256,uint256,address)\":{\"params\":{\"liquidityReceived\":\"The amount of LP tokens minted.\",\"otherAmount\":\"The amount of the other token added.\",\"otherToken\":\"The address of the non-pREWA token in the pair.\",\"pREWAAmount\":\"The amount of pREWA token added.\",\"user\":\"The address of the liquidity provider.\"}},\"LiquidityRemoved(address,uint256,uint256,uint256,address)\":{\"params\":{\"liquidityBurned\":\"The amount of LP tokens burned.\",\"otherAmount\":\"The amount of the other token withdrawn.\",\"otherToken\":\"The address of the non-pREWA token in the pair.\",\"pREWAAmount\":\"The amount of pREWA token withdrawn.\",\"user\":\"The address of the liquidity provider.\"}},\"MaxDeadlineOffsetUpdated(uint256,uint256,address)\":{\"params\":{\"newOffset\":\"The new offset in seconds.\",\"oldOffset\":\"The old offset in seconds.\",\"updater\":\"The address that performed the update.\"}},\"PairRegistered(bytes32,address,address,address)\":{\"params\":{\"pairAddress\":\"The address of the LP token contract.\",\"pairId\":\"The deterministic ID of the pair.\",\"registrar\":\"The address that registered the pair.\",\"tokenAddress\":\"The address of the non-pREWA token in the pair.\"}},\"PairStatusUpdated(address,bool,address)\":{\"params\":{\"active\":\"The new active status.\",\"otherToken\":\"The address of the non-pREWA token in the pair.\",\"updater\":\"The address that updated the status.\"}},\"RouterAddressUpdated(address,address,address)\":{\"params\":{\"newRouter\":\"The address of the new router.\",\"oldRouter\":\"The address of the old router.\",\"updater\":\"The address that performed the update.\"}},\"SlippageToleranceUpdated(uint256,uint256,address)\":{\"params\":{\"newTolerance\":\"The new slippage tolerance in basis points.\",\"oldTolerance\":\"The old slippage tolerance in basis points.\",\"updater\":\"The address that performed the update.\"}}},\"kind\":\"dev\",\"methods\":{\"addLiquidity(address,uint256,uint256,uint256,uint256,uint256)\":{\"params\":{\"deadline\":\"The transaction deadline.\",\"otherAmountDesired\":\"The desired amount of the other token to add.\",\"otherMin\":\"The minimum amount of the other token to add.\",\"otherToken\":\"The address of the other token in the pair.\",\"pREWAAmountDesired\":\"The desired amount of pREWA to add.\",\"pREWAMin\":\"The minimum amount of pREWA to add.\"},\"returns\":{\"actualOtherAdded\":\"The actual amount of the other token added.\",\"actualPREWAAdded\":\"The actual amount of pREWA added.\",\"lpReceived\":\"The amount of LP tokens received.\"}},\"addLiquidityBNB(uint256,uint256,uint256,uint256)\":{\"params\":{\"bnbMin\":\"The minimum amount of BNB to add.\",\"deadline\":\"The transaction deadline.\",\"pREWAAmountDesired\":\"The desired amount of pREWA to add.\",\"pREWAMin\":\"The minimum amount of pREWA to add.\"},\"returns\":{\"actualBNBAdded\":\"The actual amount of BNB added.\",\"actualPREWAAdded\":\"The actual amount of pREWA added.\",\"lpReceived\":\"The amount of LP tokens received.\"}},\"checkEmergencyStatus(bytes4)\":{\"details\":\"This function is typically called by modifiers within the implementing contract to guard functions.\",\"params\":{\"operation\":\"The 4-byte function selector of the operation being attempted.\"},\"returns\":{\"allowed\":\"A boolean indicating if the operation is permitted.\"}},\"emergencyShutdown(uint8)\":{\"details\":\"The implementing contract defines how it should react to different emergency levels. For example, it might pause itself or enable emergency withdrawals.\",\"params\":{\"emergencyLevel\":\"The system-wide emergency level being broadcast by the controller.\"},\"returns\":{\"success\":\"A boolean indicating if the shutdown was handled successfully.\"}},\"getEmergencyController()\":{\"returns\":{\"controller\":\"The address of the EmergencyController.\"}},\"getLPTokenAddress(address)\":{\"params\":{\"otherToken\":\"The address of the non-pREWA token in the pair.\"},\"returns\":{\"lpTokenAddr_\":\"The address of the LP token contract.\"}},\"getPairInfo(address)\":{\"params\":{\"otherToken\":\"The address of the non-pREWA token in the pair.\"},\"returns\":{\"activeOut\":\"The active status of the pair.\",\"blockTimestampLastOut\":\"The timestamp of the last interaction with the pair.\",\"pREWAIsToken0Out\":\"True if pREWA is token0 in the pair.\",\"pairAddressOut\":\"The address of the LP token contract.\",\"reserve0Out\":\"The reserve of token0.\",\"reserve1Out\":\"The reserve of token1.\",\"tokenAddressOut\":\"The address of the non-pREWA token.\"}},\"isEmergencyPaused()\":{\"returns\":{\"isPaused\":\"A boolean indicating if the contract is considered to be in a paused state.\"}},\"recoverFailedBNBRefund(address)\":{\"details\":\"This function should be called after off-chain communication confirms the user and amount.\",\"params\":{\"user\":\"The address of the user who is owed a refund.\"},\"returns\":{\"successFlag\":\"True if the recovery was successful.\"}},\"recoverTokens(address,uint256,address)\":{\"params\":{\"amountRec\":\"The amount to recover.\",\"recipient\":\"The address to receive the recovered tokens.\",\"tokenAddressRec\":\"The address of the token to recover.\"},\"returns\":{\"successFlag\":\"True if the operation was successful.\"}},\"registerPair(address)\":{\"params\":{\"tokenAddress\":\"The address of the non-pREWA token to pair with. Use address(0) for the native wrapped token (e.g., WBNB).\"},\"returns\":{\"success\":\"True if the operation was successful.\"}},\"removeLiquidity(address,uint256,uint256,uint256,uint256)\":{\"params\":{\"deadline\":\"The transaction deadline.\",\"liquidity\":\"The amount of LP tokens to burn.\",\"otherMin\":\"The minimum amount of the other token to receive.\",\"otherToken\":\"The address of the other token in the pair.\",\"pREWAMin\":\"The minimum amount of pREWA to receive.\"},\"returns\":{\"amountOther\":\"The amount of the other token received.\",\"amountToken\":\"The amount of pREWA received.\"}},\"removeLiquidityBNB(uint256,uint256,uint256,uint256)\":{\"params\":{\"bnbMin\":\"The minimum amount of BNB to receive.\",\"deadline\":\"The transaction deadline.\",\"liquidity\":\"The amount of LP tokens to burn.\",\"pREWAMin\":\"The minimum amount of pREWA to receive.\"},\"returns\":{\"amountBNB\":\"The amount of BNB received.\",\"amountToken\":\"The amount of pREWA received.\"}},\"setEmergencyController(address)\":{\"details\":\"This function should be access-controlled within the implementing contract (e.g., `onlyOwner`).\",\"params\":{\"controller\":\"The address of the new EmergencyController.\"},\"returns\":{\"success\":\"A boolean indicating if the operation was successful.\"}},\"setMaxDeadlineOffset(uint256)\":{\"params\":{\"offset\":\"The new maximum offset in seconds.\"},\"returns\":{\"success\":\"True if the operation was successful.\"}},\"setPairStatus(address,bool)\":{\"params\":{\"active\":\"The new active status for the pair.\",\"otherToken\":\"The address of the non-pREWA token in the pair to update.\"},\"returns\":{\"success\":\"True if the operation was successful.\"}},\"setRouterAddress(address)\":{\"params\":{\"routerAddress\":\"The new router address.\"},\"returns\":{\"success\":\"True if the operation was successful.\"}},\"setSlippageTolerance(uint256)\":{\"params\":{\"tolerance\":\"The new slippage tolerance in basis points.\"},\"returns\":{\"success\":\"True if the operation was successful.\"}}},\"title\":\"ILiquidityManager Interface\",\"version\":1},\"userdoc\":{\"events\":{\"BNBRefundFailed(address,uint256)\":{\"notice\":\"Emitted if refunding excess BNB during `addLiquidityBNB` fails.\"},\"BNBRefundRecovered(address,uint256,address)\":{\"notice\":\"Emitted when a previously failed BNB refund is successfully recovered by an admin.\"},\"EmergencyShutdownHandled(uint8,address)\":{\"notice\":\"Emitted when a contract has processed an `emergencyShutdown` signal from the controller.\"},\"EmergencyStatusChecked(uint8,bytes4,bool)\":{\"notice\":\"Emitted when an emergency status check is performed.\"},\"LPTokenOracleRegistrationFailed(address,address,address)\":{\"notice\":\"Emitted if registering an LP token with the OracleIntegration contract fails.\"},\"LiquidityAdded(address,uint256,uint256,uint256,address)\":{\"notice\":\"Emitted when liquidity is successfully added to a pair.\"},\"LiquidityRemoved(address,uint256,uint256,uint256,address)\":{\"notice\":\"Emitted when liquidity is successfully removed from a pair.\"},\"MaxDeadlineOffsetUpdated(uint256,uint256,address)\":{\"notice\":\"Emitted when the maximum deadline offset is updated.\"},\"PairRegistered(bytes32,address,address,address)\":{\"notice\":\"Emitted when a new liquidity pair is registered.\"},\"PairStatusUpdated(address,bool,address)\":{\"notice\":\"Emitted when a registered pair's active status is updated.\"},\"RouterAddressUpdated(address,address,address)\":{\"notice\":\"Emitted when the DEX router address is updated.\"},\"SlippageToleranceUpdated(uint256,uint256,address)\":{\"notice\":\"Emitted when the default slippage tolerance is updated.\"}},\"kind\":\"user\",\"methods\":{\"addLiquidity(address,uint256,uint256,uint256,uint256,uint256)\":{\"notice\":\"Adds liquidity to a pREWA-ERC20 pair.\"},\"addLiquidityBNB(uint256,uint256,uint256,uint256)\":{\"notice\":\"Adds liquidity to the pREWA-BNB pair.\"},\"checkEmergencyStatus(bytes4)\":{\"notice\":\"Checks if a specific operation is allowed based on the current emergency status.\"},\"emergencyShutdown(uint8)\":{\"notice\":\"A function to be called by the EmergencyController to trigger a state change in the contract.\"},\"getEmergencyController()\":{\"notice\":\"Returns the address of the EmergencyController managing this contract.\"},\"getLPTokenAddress(address)\":{\"notice\":\"Retrieves the LP token address for a given pair.\"},\"getPairInfo(address)\":{\"notice\":\"Retrieves detailed information about a registered pair.\"},\"isEmergencyPaused()\":{\"notice\":\"Checks if the contract is effectively paused, either locally or by the global EmergencyController.\"},\"recoverFailedBNBRefund(address)\":{\"notice\":\"Allows an admin to recover BNB for a user whose refund failed during `addLiquidityBNB`.\"},\"recoverTokens(address,uint256,address)\":{\"notice\":\"Recovers non-essential ERC20 tokens mistakenly sent to the contract.\"},\"registerPair(address)\":{\"notice\":\"Registers a new pREWA pair with the manager, creating it on the DEX if it doesn't exist.\"},\"removeLiquidity(address,uint256,uint256,uint256,uint256)\":{\"notice\":\"Removes liquidity from a pREWA-ERC20 pair.\"},\"removeLiquidityBNB(uint256,uint256,uint256,uint256)\":{\"notice\":\"Removes liquidity from the pREWA-BNB pair.\"},\"setEmergencyController(address)\":{\"notice\":\"Sets or updates the address of the EmergencyController.\"},\"setMaxDeadlineOffset(uint256)\":{\"notice\":\"Sets the maximum time offset for transaction deadlines.\"},\"setPairStatus(address,bool)\":{\"notice\":\"Activates or deactivates a registered pair for liquidity operations.\"},\"setRouterAddress(address)\":{\"notice\":\"Sets the address of the DEX router.\"},\"setSlippageTolerance(uint256)\":{\"notice\":\"Sets the default slippage tolerance for liquidity operations.\"}},\"notice\":\"Defines the external interface for the LiquidityManager contract.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/liquidity/interfaces/ILiquidityManager.sol\":\"ILiquidityManager\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin-contracts-upgradeable/contracts/\"],\"viaIR\":true},\"sources\":{\"contracts/interfaces/IEmergencyAware.sol\":{\"keccak256\":\"0x679e6cdc57c8b9d75f1928e9767e56a9ad812900dccf3e0a92aa87814324cf5a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3219a26e6afbc417ec0e89639bbc028d99ba5fa1b32b2df25310e2df758d4b7e\",\"dweb:/ipfs/QmcLE2ZTDr15JcGkKMDDfjKEcUhuDbfMyFoG4c8CV8oPrh\"]},\"contracts/liquidity/interfaces/ILiquidityManager.sol\":{\"keccak256\":\"0x4720faeacb3d2a8f1b3e88c587f60b54e2f8a04ed77af7775194f6d40b355af8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://821ce761316bf9b6edd9a627b50f2456c0f9b69bf04485b24f8013d54cc01b52\",\"dweb:/ipfs/QmUWP6p4zHSB5dJAoQaskZL7dqsbxgQWffWvadG3JqEJZx\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.28+commit.7893614a"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"address","name":"user","type":"address","indexed":true},{"internalType":"uint256","name":"amount","type":"uint256","indexed":false}],"type":"event","name":"BNBRefundFailed","anonymous":false},{"inputs":[{"internalType":"address","name":"user","type":"address","indexed":true},{"internalType":"uint256","name":"amount","type":"uint256","indexed":false},{"internalType":"address","name":"admin","type":"address","indexed":true}],"type":"event","name":"BNBRefundRecovered","anonymous":false},{"inputs":[{"internalType":"uint8","name":"emergencyLevel","type":"uint8","indexed":false},{"internalType":"address","name":"caller","type":"address","indexed":true}],"type":"event","name":"EmergencyShutdownHandled","anonymous":false},{"inputs":[{"internalType":"uint8","name":"emergencyLevel","type":"uint8","indexed":false},{"internalType":"bytes4","name":"operation","type":"bytes4","indexed":false},{"internalType":"bool","name":"allowed","type":"bool","indexed":false}],"type":"event","name":"EmergencyStatusChecked","anonymous":false},{"inputs":[{"internalType":"address","name":"lpTokenAddress","type":"address","indexed":true},{"internalType":"address","name":"token0","type":"address","indexed":true},{"internalType":"address","name":"token1","type":"address","indexed":true}],"type":"event","name":"LPTokenOracleRegistrationFailed","anonymous":false},{"inputs":[{"internalType":"address","name":"otherToken","type":"address","indexed":true},{"internalType":"uint256","name":"pREWAAmount","type":"uint256","indexed":false},{"internalType":"uint256","name":"otherAmount","type":"uint256","indexed":false},{"internalType":"uint256","name":"liquidityReceived","type":"uint256","indexed":false},{"internalType":"address","name":"user","type":"address","indexed":true}],"type":"event","name":"LiquidityAdded","anonymous":false},{"inputs":[{"internalType":"address","name":"otherToken","type":"address","indexed":true},{"internalType":"uint256","name":"pREWAAmount","type":"uint256","indexed":false},{"internalType":"uint256","name":"otherAmount","type":"uint256","indexed":false},{"internalType":"uint256","name":"liquidityBurned","type":"uint256","indexed":false},{"internalType":"address","name":"user","type":"address","indexed":true}],"type":"event","name":"LiquidityRemoved","anonymous":false},{"inputs":[{"internalType":"uint256","name":"oldOffset","type":"uint256","indexed":false},{"internalType":"uint256","name":"newOffset","type":"uint256","indexed":false},{"internalType":"address","name":"updater","type":"address","indexed":true}],"type":"event","name":"MaxDeadlineOffsetUpdated","anonymous":false},{"inputs":[{"internalType":"bytes32","name":"pairId","type":"bytes32","indexed":true},{"internalType":"address","name":"pairAddress","type":"address","indexed":true},{"internalType":"address","name":"tokenAddress","type":"address","indexed":true},{"internalType":"address","name":"registrar","type":"address","indexed":false}],"type":"event","name":"PairRegistered","anonymous":false},{"inputs":[{"internalType":"address","name":"otherToken","type":"address","indexed":true},{"internalType":"bool","name":"active","type":"bool","indexed":false},{"internalType":"address","name":"updater","type":"address","indexed":true}],"type":"event","name":"PairStatusUpdated","anonymous":false},{"inputs":[{"internalType":"address","name":"oldRouter","type":"address","indexed":true},{"internalType":"address","name":"newRouter","type":"address","indexed":true},{"internalType":"address","name":"updater","type":"address","indexed":true}],"type":"event","name":"RouterAddressUpdated","anonymous":false},{"inputs":[{"internalType":"uint256","name":"oldTolerance","type":"uint256","indexed":false},{"internalType":"uint256","name":"newTolerance","type":"uint256","indexed":false},{"internalType":"address","name":"updater","type":"address","indexed":true}],"type":"event","name":"SlippageToleranceUpdated","anonymous":false},{"inputs":[{"internalType":"address","name":"otherToken","type":"address"},{"internalType":"uint256","name":"pREWAAmountDesired","type":"uint256"},{"internalType":"uint256","name":"otherAmountDesired","type":"uint256"},{"internalType":"uint256","name":"pREWAMin","type":"uint256"},{"internalType":"uint256","name":"otherMin","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"addLiquidity","outputs":[{"internalType":"uint256","name":"actualPREWAAdded","type":"uint256"},{"internalType":"uint256","name":"actualOtherAdded","type":"uint256"},{"internalType":"uint256","name":"lpReceived","type":"uint256"}]},{"inputs":[{"internalType":"uint256","name":"pREWAAmountDesired","type":"uint256"},{"internalType":"uint256","name":"pREWAMin","type":"uint256"},{"internalType":"uint256","name":"bnbMin","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"}],"stateMutability":"payable","type":"function","name":"addLiquidityBNB","outputs":[{"internalType":"uint256","name":"actualPREWAAdded","type":"uint256"},{"internalType":"uint256","name":"actualBNBAdded","type":"uint256"},{"internalType":"uint256","name":"lpReceived","type":"uint256"}]},{"inputs":[{"internalType":"bytes4","name":"operation","type":"bytes4"}],"stateMutability":"view","type":"function","name":"checkEmergencyStatus","outputs":[{"internalType":"bool","name":"allowed","type":"bool"}]},{"inputs":[{"internalType":"uint8","name":"emergencyLevel","type":"uint8"}],"stateMutability":"nonpayable","type":"function","name":"emergencyShutdown","outputs":[{"internalType":"bool","name":"success","type":"bool"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"getEmergencyController","outputs":[{"internalType":"address","name":"controller","type":"address"}]},{"inputs":[{"internalType":"address","name":"otherToken","type":"address"}],"stateMutability":"view","type":"function","name":"getLPTokenAddress","outputs":[{"internalType":"address","name":"lpTokenAddr_","type":"address"}]},{"inputs":[{"internalType":"address","name":"otherToken","type":"address"}],"stateMutability":"view","type":"function","name":"getPairInfo","outputs":[{"internalType":"address","name":"pairAddressOut","type":"address"},{"internalType":"address","name":"tokenAddressOut","type":"address"},{"internalType":"bool","name":"activeOut","type":"bool"},{"internalType":"uint256","name":"reserve0Out","type":"uint256"},{"internalType":"uint256","name":"reserve1Out","type":"uint256"},{"internalType":"bool","name":"pREWAIsToken0Out","type":"bool"},{"internalType":"uint32","name":"blockTimestampLastOut","type":"uint32"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"isEmergencyPaused","outputs":[{"internalType":"bool","name":"isPaused","type":"bool"}]},{"inputs":[{"internalType":"address","name":"user","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"recoverFailedBNBRefund","outputs":[{"internalType":"bool","name":"successFlag","type":"bool"}]},{"inputs":[{"internalType":"address","name":"tokenAddressRec","type":"address"},{"internalType":"uint256","name":"amountRec","type":"uint256"},{"internalType":"address","name":"recipient","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"recoverTokens","outputs":[{"internalType":"bool","name":"successFlag","type":"bool"}]},{"inputs":[{"internalType":"address","name":"tokenAddress","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"registerPair","outputs":[{"internalType":"bool","name":"success","type":"bool"}]},{"inputs":[{"internalType":"address","name":"otherToken","type":"address"},{"internalType":"uint256","name":"liquidity","type":"uint256"},{"internalType":"uint256","name":"pREWAMin","type":"uint256"},{"internalType":"uint256","name":"otherMin","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"removeLiquidity","outputs":[{"internalType":"uint256","name":"amountToken","type":"uint256"},{"internalType":"uint256","name":"amountOther","type":"uint256"}]},{"inputs":[{"internalType":"uint256","name":"liquidity","type":"uint256"},{"internalType":"uint256","name":"pREWAMin","type":"uint256"},{"internalType":"uint256","name":"bnbMin","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"removeLiquidityBNB","outputs":[{"internalType":"uint256","name":"amountToken","type":"uint256"},{"internalType":"uint256","name":"amountBNB","type":"uint256"}]},{"inputs":[{"internalType":"address","name":"controller","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"setEmergencyController","outputs":[{"internalType":"bool","name":"success","type":"bool"}]},{"inputs":[{"internalType":"uint256","name":"offset","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"setMaxDeadlineOffset","outputs":[{"internalType":"bool","name":"success","type":"bool"}]},{"inputs":[{"internalType":"address","name":"otherToken","type":"address"},{"internalType":"bool","name":"active","type":"bool"}],"stateMutability":"nonpayable","type":"function","name":"setPairStatus","outputs":[{"internalType":"bool","name":"success","type":"bool"}]},{"inputs":[{"internalType":"address","name":"routerAddress","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"setRouterAddress","outputs":[{"internalType":"bool","name":"success","type":"bool"}]},{"inputs":[{"internalType":"uint256","name":"tolerance","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"setSlippageTolerance","outputs":[{"internalType":"bool","name":"success","type":"bool"}]}],"devdoc":{"kind":"dev","methods":{"addLiquidity(address,uint256,uint256,uint256,uint256,uint256)":{"params":{"deadline":"The transaction deadline.","otherAmountDesired":"The desired amount of the other token to add.","otherMin":"The minimum amount of the other token to add.","otherToken":"The address of the other token in the pair.","pREWAAmountDesired":"The desired amount of pREWA to add.","pREWAMin":"The minimum amount of pREWA to add."},"returns":{"actualOtherAdded":"The actual amount of the other token added.","actualPREWAAdded":"The actual amount of pREWA added.","lpReceived":"The amount of LP tokens received."}},"addLiquidityBNB(uint256,uint256,uint256,uint256)":{"params":{"bnbMin":"The minimum amount of BNB to add.","deadline":"The transaction deadline.","pREWAAmountDesired":"The desired amount of pREWA to add.","pREWAMin":"The minimum amount of pREWA to add."},"returns":{"actualBNBAdded":"The actual amount of BNB added.","actualPREWAAdded":"The actual amount of pREWA added.","lpReceived":"The amount of LP tokens received."}},"checkEmergencyStatus(bytes4)":{"details":"This function is typically called by modifiers within the implementing contract to guard functions.","params":{"operation":"The 4-byte function selector of the operation being attempted."},"returns":{"allowed":"A boolean indicating if the operation is permitted."}},"emergencyShutdown(uint8)":{"details":"The implementing contract defines how it should react to different emergency levels. For example, it might pause itself or enable emergency withdrawals.","params":{"emergencyLevel":"The system-wide emergency level being broadcast by the controller."},"returns":{"success":"A boolean indicating if the shutdown was handled successfully."}},"getEmergencyController()":{"returns":{"controller":"The address of the EmergencyController."}},"getLPTokenAddress(address)":{"params":{"otherToken":"The address of the non-pREWA token in the pair."},"returns":{"lpTokenAddr_":"The address of the LP token contract."}},"getPairInfo(address)":{"params":{"otherToken":"The address of the non-pREWA token in the pair."},"returns":{"activeOut":"The active status of the pair.","blockTimestampLastOut":"The timestamp of the last interaction with the pair.","pREWAIsToken0Out":"True if pREWA is token0 in the pair.","pairAddressOut":"The address of the LP token contract.","reserve0Out":"The reserve of token0.","reserve1Out":"The reserve of token1.","tokenAddressOut":"The address of the non-pREWA token."}},"isEmergencyPaused()":{"returns":{"isPaused":"A boolean indicating if the contract is considered to be in a paused state."}},"recoverFailedBNBRefund(address)":{"details":"This function should be called after off-chain communication confirms the user and amount.","params":{"user":"The address of the user who is owed a refund."},"returns":{"successFlag":"True if the recovery was successful."}},"recoverTokens(address,uint256,address)":{"params":{"amountRec":"The amount to recover.","recipient":"The address to receive the recovered tokens.","tokenAddressRec":"The address of the token to recover."},"returns":{"successFlag":"True if the operation was successful."}},"registerPair(address)":{"params":{"tokenAddress":"The address of the non-pREWA token to pair with. Use address(0) for the native wrapped token (e.g., WBNB)."},"returns":{"success":"True if the operation was successful."}},"removeLiquidity(address,uint256,uint256,uint256,uint256)":{"params":{"deadline":"The transaction deadline.","liquidity":"The amount of LP tokens to burn.","otherMin":"The minimum amount of the other token to receive.","otherToken":"The address of the other token in the pair.","pREWAMin":"The minimum amount of pREWA to receive."},"returns":{"amountOther":"The amount of the other token received.","amountToken":"The amount of pREWA received."}},"removeLiquidityBNB(uint256,uint256,uint256,uint256)":{"params":{"bnbMin":"The minimum amount of BNB to receive.","deadline":"The transaction deadline.","liquidity":"The amount of LP tokens to burn.","pREWAMin":"The minimum amount of pREWA to receive."},"returns":{"amountBNB":"The amount of BNB received.","amountToken":"The amount of pREWA received."}},"setEmergencyController(address)":{"details":"This function should be access-controlled within the implementing contract (e.g., `onlyOwner`).","params":{"controller":"The address of the new EmergencyController."},"returns":{"success":"A boolean indicating if the operation was successful."}},"setMaxDeadlineOffset(uint256)":{"params":{"offset":"The new maximum offset in seconds."},"returns":{"success":"True if the operation was successful."}},"setPairStatus(address,bool)":{"params":{"active":"The new active status for the pair.","otherToken":"The address of the non-pREWA token in the pair to update."},"returns":{"success":"True if the operation was successful."}},"setRouterAddress(address)":{"params":{"routerAddress":"The new router address."},"returns":{"success":"True if the operation was successful."}},"setSlippageTolerance(uint256)":{"params":{"tolerance":"The new slippage tolerance in basis points."},"returns":{"success":"True if the operation was successful."}}},"version":1},"userdoc":{"kind":"user","methods":{"addLiquidity(address,uint256,uint256,uint256,uint256,uint256)":{"notice":"Adds liquidity to a pREWA-ERC20 pair."},"addLiquidityBNB(uint256,uint256,uint256,uint256)":{"notice":"Adds liquidity to the pREWA-BNB pair."},"checkEmergencyStatus(bytes4)":{"notice":"Checks if a specific operation is allowed based on the current emergency status."},"emergencyShutdown(uint8)":{"notice":"A function to be called by the EmergencyController to trigger a state change in the contract."},"getEmergencyController()":{"notice":"Returns the address of the EmergencyController managing this contract."},"getLPTokenAddress(address)":{"notice":"Retrieves the LP token address for a given pair."},"getPairInfo(address)":{"notice":"Retrieves detailed information about a registered pair."},"isEmergencyPaused()":{"notice":"Checks if the contract is effectively paused, either locally or by the global EmergencyController."},"recoverFailedBNBRefund(address)":{"notice":"Allows an admin to recover BNB for a user whose refund failed during `addLiquidityBNB`."},"recoverTokens(address,uint256,address)":{"notice":"Recovers non-essential ERC20 tokens mistakenly sent to the contract."},"registerPair(address)":{"notice":"Registers a new pREWA pair with the manager, creating it on the DEX if it doesn't exist."},"removeLiquidity(address,uint256,uint256,uint256,uint256)":{"notice":"Removes liquidity from a pREWA-ERC20 pair."},"removeLiquidityBNB(uint256,uint256,uint256,uint256)":{"notice":"Removes liquidity from the pREWA-BNB pair."},"setEmergencyController(address)":{"notice":"Sets or updates the address of the EmergencyController."},"setMaxDeadlineOffset(uint256)":{"notice":"Sets the maximum time offset for transaction deadlines."},"setPairStatus(address,bool)":{"notice":"Activates or deactivates a registered pair for liquidity operations."},"setRouterAddress(address)":{"notice":"Sets the address of the DEX router."},"setSlippageTolerance(uint256)":{"notice":"Sets the default slippage tolerance for liquidity operations."}},"version":1}},"settings":{"remappings":["@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/","@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/","ds-test/=lib/forge-std/lib/ds-test/src/","erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/","forge-std/=lib/forge-std/src/","openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/","openzeppelin-contracts/=lib/openzeppelin-contracts/","openzeppelin/=lib/openzeppelin-contracts-upgradeable/contracts/"],"optimizer":{"enabled":true,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"contracts/liquidity/interfaces/ILiquidityManager.sol":"ILiquidityManager"},"evmVersion":"paris","libraries":{},"viaIR":true},"sources":{"contracts/interfaces/IEmergencyAware.sol":{"keccak256":"0x679e6cdc57c8b9d75f1928e9767e56a9ad812900dccf3e0a92aa87814324cf5a","urls":["bzz-raw://3219a26e6afbc417ec0e89639bbc028d99ba5fa1b32b2df25310e2df758d4b7e","dweb:/ipfs/QmcLE2ZTDr15JcGkKMDDfjKEcUhuDbfMyFoG4c8CV8oPrh"],"license":"MIT"},"contracts/liquidity/interfaces/ILiquidityManager.sol":{"keccak256":"0x4720faeacb3d2a8f1b3e88c587f60b54e2f8a04ed77af7775194f6d40b355af8","urls":["bzz-raw://821ce761316bf9b6edd9a627b50f2456c0f9b69bf04485b24f8013d54cc01b52","dweb:/ipfs/QmUWP6p4zHSB5dJAoQaskZL7dqsbxgQWffWvadG3JqEJZx"],"license":"MIT"}},"version":1},"id":25}