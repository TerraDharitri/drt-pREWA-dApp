{"abi":[{"type":"function","name":"addPool","inputs":[{"name":"lpToken","type":"address","internalType":"address"},{"name":"baseAPRBpsIn","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"success","type":"bool","internalType":"bool"}],"stateMutability":"nonpayable"},{"type":"function","name":"addTier","inputs":[{"name":"duration","type":"uint256","internalType":"uint256"},{"name":"rewardMultiplier","type":"uint256","internalType":"uint256"},{"name":"earlyWithdrawalPenalty","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"tierId","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"calculateLPRewards","inputs":[{"name":"user","type":"address","internalType":"address"},{"name":"positionId","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"rewardsAmount","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"checkEmergencyStatus","inputs":[{"name":"operation","type":"bytes4","internalType":"bytes4"}],"outputs":[{"name":"allowed","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"claimLPRewards","inputs":[{"name":"positionId","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"amountClaimed","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"emergencyShutdown","inputs":[{"name":"emergencyLevel","type":"uint8","internalType":"uint8"}],"outputs":[{"name":"success","type":"bool","internalType":"bool"}],"stateMutability":"nonpayable"},{"type":"function","name":"emergencyWithdrawLP","inputs":[{"name":"positionId","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"amountWithdrawn","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"getEmergencyController","inputs":[],"outputs":[{"name":"controller","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"getLPEmergencyWithdrawalSettings","inputs":[],"outputs":[{"name":"enabled","type":"bool","internalType":"bool"},{"name":"penaltyBps","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"getLPPositionCount","inputs":[{"name":"user","type":"address","internalType":"address"}],"outputs":[{"name":"count","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"getLPStakingPosition","inputs":[{"name":"user","type":"address","internalType":"address"},{"name":"positionId","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"amount","type":"uint256","internalType":"uint256"},{"name":"startTime","type":"uint256","internalType":"uint256"},{"name":"endTime","type":"uint256","internalType":"uint256"},{"name":"lastClaimTime","type":"uint256","internalType":"uint256"},{"name":"tierId","type":"uint256","internalType":"uint256"},{"name":"lpToken","type":"address","internalType":"address"},{"name":"active","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"getPoolInfo","inputs":[{"name":"lpToken","type":"address","internalType":"address"}],"outputs":[{"name":"baseAPRBpsOut","type":"uint256","internalType":"uint256"},{"name":"totalStakedInPoolOut","type":"uint256","internalType":"uint256"},{"name":"isActiveOut","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"getTierInfo","inputs":[{"name":"tierId","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"duration","type":"uint256","internalType":"uint256"},{"name":"rewardMultiplier","type":"uint256","internalType":"uint256"},{"name":"earlyWithdrawalPenalty","type":"uint256","internalType":"uint256"},{"name":"active","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"initialize","inputs":[{"name":"pREWATokenAddress_","type":"address","internalType":"address"},{"name":"liquidityManagerAddr_","type":"address","internalType":"address"},{"name":"initialOwner_","type":"address","internalType":"address"},{"name":"minStakeDuration_","type":"uint256","internalType":"uint256"},{"name":"accessControlAddr_","type":"address","internalType":"address"},{"name":"emergencyControllerAddr_","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"isEmergencyPaused","inputs":[],"outputs":[{"name":"isPaused","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"setEmergencyController","inputs":[{"name":"controller","type":"address","internalType":"address"}],"outputs":[{"name":"success","type":"bool","internalType":"bool"}],"stateMutability":"nonpayable"},{"type":"function","name":"setLPEmergencyWithdrawal","inputs":[{"name":"enabled","type":"bool","internalType":"bool"},{"name":"penalty","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"success","type":"bool","internalType":"bool"}],"stateMutability":"nonpayable"},{"type":"function","name":"stakeLPTokens","inputs":[{"name":"lpToken","type":"address","internalType":"address"},{"name":"amount","type":"uint256","internalType":"uint256"},{"name":"tierId","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"positionId","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"unstakeLPTokens","inputs":[{"name":"positionId","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"amountUnstaked","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"updatePool","inputs":[{"name":"lpToken","type":"address","internalType":"address"},{"name":"newBaseAPRBpsIn","type":"uint256","internalType":"uint256"},{"name":"active","type":"bool","internalType":"bool"}],"outputs":[{"name":"success","type":"bool","internalType":"bool"}],"stateMutability":"nonpayable"},{"type":"function","name":"updateTier","inputs":[{"name":"tierId","type":"uint256","internalType":"uint256"},{"name":"duration","type":"uint256","internalType":"uint256"},{"name":"rewardMultiplier","type":"uint256","internalType":"uint256"},{"name":"earlyWithdrawalPenalty","type":"uint256","internalType":"uint256"},{"name":"active","type":"bool","internalType":"bool"}],"outputs":[{"name":"success","type":"bool","internalType":"bool"}],"stateMutability":"nonpayable"},{"type":"event","name":"EmergencyShutdownHandled","inputs":[{"name":"emergencyLevel","type":"uint8","indexed":false,"internalType":"uint8"},{"name":"caller","type":"address","indexed":true,"internalType":"address"}],"anonymous":false},{"type":"event","name":"EmergencyStatusChecked","inputs":[{"name":"emergencyLevel","type":"uint8","indexed":false,"internalType":"uint8"},{"name":"operation","type":"bytes4","indexed":false,"internalType":"bytes4"},{"name":"allowed","type":"bool","indexed":false,"internalType":"bool"}],"anonymous":false},{"type":"event","name":"LPRewardsClaimed","inputs":[{"name":"user","type":"address","indexed":true,"internalType":"address"},{"name":"amount","type":"uint256","indexed":false,"internalType":"uint256"},{"name":"lpToken","type":"address","indexed":true,"internalType":"address"},{"name":"positionId","type":"uint256","indexed":true,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"LPStaked","inputs":[{"name":"user","type":"address","indexed":true,"internalType":"address"},{"name":"amount","type":"uint256","indexed":false,"internalType":"uint256"},{"name":"lpToken","type":"address","indexed":true,"internalType":"address"},{"name":"tierId","type":"uint256","indexed":true,"internalType":"uint256"},{"name":"positionId","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"LPStakingEmergencyControllerSet","inputs":[{"name":"oldController","type":"address","indexed":true,"internalType":"address"},{"name":"newController","type":"address","indexed":true,"internalType":"address"},{"name":"setter","type":"address","indexed":true,"internalType":"address"}],"anonymous":false},{"type":"event","name":"LPStakingEmergencyWithdrawalSet","inputs":[{"name":"enabled","type":"bool","indexed":false,"internalType":"bool"},{"name":"penalty","type":"uint256","indexed":false,"internalType":"uint256"},{"name":"updater","type":"address","indexed":true,"internalType":"address"}],"anonymous":false},{"type":"event","name":"LPUnstaked","inputs":[{"name":"user","type":"address","indexed":true,"internalType":"address"},{"name":"amount","type":"uint256","indexed":false,"internalType":"uint256"},{"name":"lpToken","type":"address","indexed":true,"internalType":"address"},{"name":"positionId","type":"uint256","indexed":true,"internalType":"uint256"},{"name":"penaltyAmount","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"PoolAdded","inputs":[{"name":"lpToken","type":"address","indexed":true,"internalType":"address"},{"name":"baseAPRBps","type":"uint256","indexed":false,"internalType":"uint256"},{"name":"correspondingScaledRate","type":"uint256","indexed":false,"internalType":"uint256"},{"name":"creator","type":"address","indexed":true,"internalType":"address"}],"anonymous":false},{"type":"event","name":"PoolTotalStakedInconsistency","inputs":[{"name":"lpToken","type":"address","indexed":true,"internalType":"address"},{"name":"poolTotal","type":"uint256","indexed":false,"internalType":"uint256"},{"name":"unstakeAmount","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"PoolUpdated","inputs":[{"name":"lpToken","type":"address","indexed":true,"internalType":"address"},{"name":"newBaseAPRBps","type":"uint256","indexed":false,"internalType":"uint256"},{"name":"correspondingScaledRate","type":"uint256","indexed":false,"internalType":"uint256"},{"name":"active","type":"bool","indexed":false,"internalType":"bool"},{"name":"updater","type":"address","indexed":true,"internalType":"address"}],"anonymous":false},{"type":"event","name":"TierAdded","inputs":[{"name":"tierId","type":"uint256","indexed":true,"internalType":"uint256"},{"name":"duration","type":"uint256","indexed":false,"internalType":"uint256"},{"name":"rewardMultiplier","type":"uint256","indexed":false,"internalType":"uint256"},{"name":"earlyWithdrawalPenalty","type":"uint256","indexed":false,"internalType":"uint256"},{"name":"creator","type":"address","indexed":true,"internalType":"address"}],"anonymous":false},{"type":"event","name":"TierUpdated","inputs":[{"name":"tierId","type":"uint256","indexed":true,"internalType":"uint256"},{"name":"duration","type":"uint256","indexed":false,"internalType":"uint256"},{"name":"rewardMultiplier","type":"uint256","indexed":false,"internalType":"uint256"},{"name":"earlyWithdrawalPenalty","type":"uint256","indexed":false,"internalType":"uint256"},{"name":"active","type":"bool","indexed":false,"internalType":"bool"},{"name":"updater","type":"address","indexed":true,"internalType":"address"}],"anonymous":false}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"addPool(address,uint256)":"32a9caba","addTier(uint256,uint256,uint256)":"6358ec57","calculateLPRewards(address,uint256)":"babc177e","checkEmergencyStatus(bytes4)":"8aed668a","claimLPRewards(uint256)":"9e0ffc09","emergencyShutdown(uint8)":"eb1676c1","emergencyWithdrawLP(uint256)":"28a95ee4","getEmergencyController()":"c993cc9d","getLPEmergencyWithdrawalSettings()":"4724f98f","getLPPositionCount(address)":"9bdc8cf5","getLPStakingPosition(address,uint256)":"79d77b42","getPoolInfo(address)":"06bfa938","getTierInfo(uint256)":"cc9d7519","initialize(address,address,address,uint256,address,address)":"32b5a1b3","isEmergencyPaused()":"290d10c4","setEmergencyController(address)":"6ca7dc89","setLPEmergencyWithdrawal(bool,uint256)":"c02152f1","stakeLPTokens(address,uint256,uint256)":"0d73eac5","unstakeLPTokens(uint256)":"76301350","updatePool(address,uint256,bool)":"76d2847f","updateTier(uint256,uint256,uint256,uint256,bool)":"6edb9e3c"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"emergencyLevel\",\"type\":\"uint8\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"}],\"name\":\"EmergencyShutdownHandled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"emergencyLevel\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"bytes4\",\"name\":\"operation\",\"type\":\"bytes4\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"allowed\",\"type\":\"bool\"}],\"name\":\"EmergencyStatusChecked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"lpToken\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"positionId\",\"type\":\"uint256\"}],\"name\":\"LPRewardsClaimed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"lpToken\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tierId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"positionId\",\"type\":\"uint256\"}],\"name\":\"LPStaked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldController\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newController\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"setter\",\"type\":\"address\"}],\"name\":\"LPStakingEmergencyControllerSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"enabled\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"penalty\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"updater\",\"type\":\"address\"}],\"name\":\"LPStakingEmergencyWithdrawalSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"lpToken\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"positionId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"penaltyAmount\",\"type\":\"uint256\"}],\"name\":\"LPUnstaked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"lpToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"baseAPRBps\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"correspondingScaledRate\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"}],\"name\":\"PoolAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"lpToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"poolTotal\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"unstakeAmount\",\"type\":\"uint256\"}],\"name\":\"PoolTotalStakedInconsistency\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"lpToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newBaseAPRBps\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"correspondingScaledRate\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"active\",\"type\":\"bool\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"updater\",\"type\":\"address\"}],\"name\":\"PoolUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tierId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"rewardMultiplier\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"earlyWithdrawalPenalty\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"}],\"name\":\"TierAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tierId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"rewardMultiplier\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"earlyWithdrawalPenalty\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"active\",\"type\":\"bool\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"updater\",\"type\":\"address\"}],\"name\":\"TierUpdated\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"lpToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"baseAPRBpsIn\",\"type\":\"uint256\"}],\"name\":\"addPool\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rewardMultiplier\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"earlyWithdrawalPenalty\",\"type\":\"uint256\"}],\"name\":\"addTier\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"tierId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"positionId\",\"type\":\"uint256\"}],\"name\":\"calculateLPRewards\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"rewardsAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"operation\",\"type\":\"bytes4\"}],\"name\":\"checkEmergencyStatus\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"allowed\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"positionId\",\"type\":\"uint256\"}],\"name\":\"claimLPRewards\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountClaimed\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"emergencyLevel\",\"type\":\"uint8\"}],\"name\":\"emergencyShutdown\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"positionId\",\"type\":\"uint256\"}],\"name\":\"emergencyWithdrawLP\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountWithdrawn\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getEmergencyController\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"controller\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getLPEmergencyWithdrawalSettings\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"enabled\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"penaltyBps\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getLPPositionCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"count\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"positionId\",\"type\":\"uint256\"}],\"name\":\"getLPStakingPosition\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastClaimTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tierId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"lpToken\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"active\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"lpToken\",\"type\":\"address\"}],\"name\":\"getPoolInfo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"baseAPRBpsOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalStakedInPoolOut\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isActiveOut\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tierId\",\"type\":\"uint256\"}],\"name\":\"getTierInfo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rewardMultiplier\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"earlyWithdrawalPenalty\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"active\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pREWATokenAddress_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"liquidityManagerAddr_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"initialOwner_\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"minStakeDuration_\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"accessControlAddr_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"emergencyControllerAddr_\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isEmergencyPaused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isPaused\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"controller\",\"type\":\"address\"}],\"name\":\"setEmergencyController\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"enabled\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"penalty\",\"type\":\"uint256\"}],\"name\":\"setLPEmergencyWithdrawal\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"lpToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tierId\",\"type\":\"uint256\"}],\"name\":\"stakeLPTokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"positionId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"positionId\",\"type\":\"uint256\"}],\"name\":\"unstakeLPTokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountUnstaked\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"lpToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"newBaseAPRBpsIn\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"active\",\"type\":\"bool\"}],\"name\":\"updatePool\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tierId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rewardMultiplier\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"earlyWithdrawalPenalty\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"active\",\"type\":\"bool\"}],\"name\":\"updateTier\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"EmergencyShutdownHandled(uint8,address)\":{\"params\":{\"caller\":\"The address of the controller that initiated the shutdown signal.\",\"emergencyLevel\":\"The emergency level that was handled.\"}},\"EmergencyStatusChecked(uint8,bytes4,bool)\":{\"params\":{\"allowed\":\"A boolean indicating whether the operation was allowed to proceed.\",\"emergencyLevel\":\"The current system-wide emergency level at the time of the check.\",\"operation\":\"The function selector of the operation being checked.\"}},\"LPRewardsClaimed(address,uint256,address,uint256)\":{\"params\":{\"amount\":\"The amount of reward tokens claimed.\",\"lpToken\":\"The address of the LP token corresponding to the position.\",\"positionId\":\"The ID of the position from which rewards were claimed.\",\"user\":\"The address of the claimant.\"}},\"LPStaked(address,uint256,address,uint256,uint256)\":{\"params\":{\"amount\":\"The amount of LP tokens staked.\",\"lpToken\":\"The address of the staked LP token.\",\"positionId\":\"The ID of the newly created staking position.\",\"tierId\":\"The ID of the staking tier.\",\"user\":\"The address of the staker.\"}},\"LPStakingEmergencyControllerSet(address,address,address)\":{\"params\":{\"newController\":\"The address of the new EmergencyController.\",\"oldController\":\"The address of the old EmergencyController.\",\"setter\":\"The address that performed the update.\"}},\"LPStakingEmergencyWithdrawalSet(bool,uint256,address)\":{\"params\":{\"enabled\":\"True if emergency withdrawal is enabled, false otherwise.\",\"penalty\":\"The penalty applied during emergency withdrawal, in basis points.\",\"updater\":\"The address that updated the settings.\"}},\"LPUnstaked(address,uint256,address,uint256,uint256)\":{\"params\":{\"amount\":\"The amount of LP tokens unstaked (after penalty).\",\"lpToken\":\"The address of the unstaked LP token.\",\"penaltyAmount\":\"The amount of LP tokens deducted as a penalty.\",\"positionId\":\"The ID of the unstaked position.\",\"user\":\"The address of the staker.\"}},\"PoolAdded(address,uint256,uint256,address)\":{\"params\":{\"baseAPRBps\":\"The base Annual Percentage Rate for the pool, in basis points.\",\"correspondingScaledRate\":\"The internal scaled rate representation of the APR.\",\"creator\":\"The address that added the pool.\",\"lpToken\":\"The address of the LP token for the new pool.\"}},\"PoolTotalStakedInconsistency(address,uint256,uint256)\":{\"details\":\"This event is critical for off-chain monitoring to detect potential state inconsistencies.\",\"params\":{\"lpToken\":\"The address of the LP token pool with the inconsistency.\",\"poolTotal\":\"The recorded total staked amount for the pool before the unstake operation.\",\"unstakeAmount\":\"The amount being unstaked that caused the inconsistency.\"}},\"PoolUpdated(address,uint256,uint256,bool,address)\":{\"params\":{\"active\":\"The new active status of the pool.\",\"correspondingScaledRate\":\"The new internal scaled rate.\",\"lpToken\":\"The address of the updated LP token pool.\",\"newBaseAPRBps\":\"The new base APR for the pool, in basis points.\",\"updater\":\"The address that updated the pool.\"}},\"TierAdded(uint256,uint256,uint256,uint256,address)\":{\"params\":{\"creator\":\"The address that added the tier.\",\"duration\":\"The staking duration of the tier, in seconds.\",\"earlyWithdrawalPenalty\":\"The penalty for early withdrawal from the tier, in basis points.\",\"rewardMultiplier\":\"The reward multiplier of the tier, in basis points.\",\"tierId\":\"The ID of the new tier.\"}},\"TierUpdated(uint256,uint256,uint256,uint256,bool,address)\":{\"params\":{\"active\":\"The new active status of the tier.\",\"duration\":\"The new duration for the tier.\",\"earlyWithdrawalPenalty\":\"The new early withdrawal penalty for the tier.\",\"rewardMultiplier\":\"The new reward multiplier for the tier.\",\"tierId\":\"The ID of the updated tier.\",\"updater\":\"The address that updated the tier.\"}}},\"kind\":\"dev\",\"methods\":{\"addPool(address,uint256)\":{\"params\":{\"baseAPRBpsIn\":\"The base Annual Percentage Rate for rewards, in basis points.\",\"lpToken\":\"The address of the LP token for the new pool.\"},\"returns\":{\"success\":\"A boolean indicating if the operation was successful.\"}},\"addTier(uint256,uint256,uint256)\":{\"params\":{\"duration\":\"The staking duration for this tier, in seconds.\",\"earlyWithdrawalPenalty\":\"The penalty for early unstaking, in basis points.\",\"rewardMultiplier\":\"The reward multiplier for this tier, in basis points.\"},\"returns\":{\"tierId\":\"The ID of the newly created tier.\"}},\"calculateLPRewards(address,uint256)\":{\"params\":{\"positionId\":\"The ID of the staking position.\",\"user\":\"The address of the staker.\"},\"returns\":{\"rewardsAmount\":\"The amount of pending rewards.\"}},\"checkEmergencyStatus(bytes4)\":{\"details\":\"This function is typically called by modifiers within the implementing contract to guard functions.\",\"params\":{\"operation\":\"The 4-byte function selector of the operation being attempted.\"},\"returns\":{\"allowed\":\"A boolean indicating if the operation is permitted.\"}},\"claimLPRewards(uint256)\":{\"params\":{\"positionId\":\"The ID of the user's staking position.\"},\"returns\":{\"amountClaimed\":\"The amount of reward tokens claimed.\"}},\"emergencyShutdown(uint8)\":{\"details\":\"The implementing contract defines how it should react to different emergency levels. For example, it might pause itself or enable emergency withdrawals.\",\"params\":{\"emergencyLevel\":\"The system-wide emergency level being broadcast by the controller.\"},\"returns\":{\"success\":\"A boolean indicating if the shutdown was handled successfully.\"}},\"emergencyWithdrawLP(uint256)\":{\"params\":{\"positionId\":\"The ID of the user's staking position to withdraw.\"},\"returns\":{\"amountWithdrawn\":\"The amount of LP tokens returned to the user after the emergency penalty.\"}},\"getEmergencyController()\":{\"returns\":{\"controller\":\"The address of the EmergencyController.\"}},\"getLPEmergencyWithdrawalSettings()\":{\"returns\":{\"enabled\":\"True if emergency withdrawal is enabled.\",\"penaltyBps\":\"The penalty in basis points.\"}},\"getLPPositionCount(address)\":{\"params\":{\"user\":\"The address of the user.\"},\"returns\":{\"count\":\"The number of positions.\"}},\"getLPStakingPosition(address,uint256)\":{\"params\":{\"positionId\":\"The ID of the staking position.\",\"user\":\"The address of the staker.\"},\"returns\":{\"active\":\"True if the position is active, false otherwise.\",\"amount\":\"The staked amount.\",\"endTime\":\"The timestamp when the stake matures.\",\"lastClaimTime\":\"The timestamp of the last reward claim.\",\"lpToken\":\"The address of the staked LP token.\",\"startTime\":\"The timestamp when the stake was created.\",\"tierId\":\"The ID of the staking tier.\"}},\"getPoolInfo(address)\":{\"params\":{\"lpToken\":\"The address of the LP token pool.\"},\"returns\":{\"baseAPRBpsOut\":\"The base APR of the pool, in basis points.\",\"isActiveOut\":\"True if the pool is active, false otherwise.\",\"totalStakedInPoolOut\":\"The total amount of the LP token staked in this pool.\"}},\"getTierInfo(uint256)\":{\"params\":{\"tierId\":\"The ID of the tier.\"},\"returns\":{\"active\":\"True if the tier is active, false otherwise.\",\"duration\":\"The staking duration of the tier.\",\"earlyWithdrawalPenalty\":\"The early withdrawal penalty of the tier.\",\"rewardMultiplier\":\"The reward multiplier of the tier.\"}},\"initialize(address,address,address,uint256,address,address)\":{\"params\":{\"accessControlAddr_\":\"The address of the AccessControl contract.\",\"emergencyControllerAddr_\":\"The address of the EmergencyController contract.\",\"initialOwner_\":\"The address of the initial owner of the contract.\",\"liquidityManagerAddr_\":\"The address of the LiquidityManager contract.\",\"minStakeDuration_\":\"The minimum duration for any staking tier.\",\"pREWATokenAddress_\":\"The address of the pREWA reward token.\"}},\"isEmergencyPaused()\":{\"returns\":{\"isPaused\":\"A boolean indicating if the contract is considered to be in a paused state.\"}},\"setEmergencyController(address)\":{\"details\":\"This function should be access-controlled within the implementing contract (e.g., `onlyOwner`).\",\"params\":{\"controller\":\"The address of the new EmergencyController.\"},\"returns\":{\"success\":\"A boolean indicating if the operation was successful.\"}},\"setLPEmergencyWithdrawal(bool,uint256)\":{\"params\":{\"enabled\":\"Whether to enable or disable emergency withdrawals.\",\"penalty\":\"The penalty to apply on emergency withdrawals, in basis points.\"},\"returns\":{\"success\":\"A boolean indicating if the operation was successful.\"}},\"stakeLPTokens(address,uint256,uint256)\":{\"params\":{\"amount\":\"The amount of the LP token to stake.\",\"lpToken\":\"The address of the LP token to stake.\",\"tierId\":\"The ID of the staking tier to use.\"},\"returns\":{\"positionId\":\"The ID of the newly created staking position for the user.\"}},\"unstakeLPTokens(uint256)\":{\"params\":{\"positionId\":\"The ID of the user's staking position to unstake.\"},\"returns\":{\"amountUnstaked\":\"The amount of LP tokens returned to the user after any penalties.\"}},\"updatePool(address,uint256,bool)\":{\"params\":{\"active\":\"The new active status for the pool.\",\"lpToken\":\"The address of the LP token for the pool to update.\",\"newBaseAPRBpsIn\":\"The new base APR for the pool, in basis points.\"},\"returns\":{\"success\":\"A boolean indicating if the operation was successful.\"}},\"updateTier(uint256,uint256,uint256,uint256,bool)\":{\"params\":{\"active\":\"The new active status for the tier.\",\"duration\":\"The new staking duration for the tier.\",\"earlyWithdrawalPenalty\":\"The new early withdrawal penalty for the tier.\",\"rewardMultiplier\":\"The new reward multiplier for the tier.\",\"tierId\":\"The ID of the tier to update.\"},\"returns\":{\"success\":\"A boolean indicating if the operation was successful.\"}}},\"title\":\"ILPStaking Interface\",\"version\":1},\"userdoc\":{\"events\":{\"EmergencyShutdownHandled(uint8,address)\":{\"notice\":\"Emitted when a contract has processed an `emergencyShutdown` signal from the controller.\"},\"EmergencyStatusChecked(uint8,bytes4,bool)\":{\"notice\":\"Emitted when an emergency status check is performed.\"},\"LPRewardsClaimed(address,uint256,address,uint256)\":{\"notice\":\"Emitted when a user claims rewards from a staking position.\"},\"LPStaked(address,uint256,address,uint256,uint256)\":{\"notice\":\"Emitted when a user stakes LP tokens.\"},\"LPStakingEmergencyControllerSet(address,address,address)\":{\"notice\":\"Emitted when the EmergencyController address is changed.\"},\"LPStakingEmergencyWithdrawalSet(bool,uint256,address)\":{\"notice\":\"Emitted when the emergency withdrawal settings are changed.\"},\"LPUnstaked(address,uint256,address,uint256,uint256)\":{\"notice\":\"Emitted when a user unstakes LP tokens.\"},\"PoolAdded(address,uint256,uint256,address)\":{\"notice\":\"Emitted when a new LP token pool is added.\"},\"PoolTotalStakedInconsistency(address,uint256,uint256)\":{\"notice\":\"Emitted when a discrepancy is detected between a pool's total staked amount and an unstake amount.\"},\"PoolUpdated(address,uint256,uint256,bool,address)\":{\"notice\":\"Emitted when an existing LP token pool is updated.\"},\"TierAdded(uint256,uint256,uint256,uint256,address)\":{\"notice\":\"Emitted when a new staking tier is added.\"},\"TierUpdated(uint256,uint256,uint256,uint256,bool,address)\":{\"notice\":\"Emitted when an existing staking tier is updated.\"}},\"kind\":\"user\",\"methods\":{\"addPool(address,uint256)\":{\"notice\":\"Adds a new LP token pool for staking.\"},\"addTier(uint256,uint256,uint256)\":{\"notice\":\"Adds a new staking tier.\"},\"calculateLPRewards(address,uint256)\":{\"notice\":\"Calculates the pending rewards for a specific staking position.\"},\"checkEmergencyStatus(bytes4)\":{\"notice\":\"Checks if a specific operation is allowed based on the current emergency status.\"},\"claimLPRewards(uint256)\":{\"notice\":\"Claims pending rewards for a specific staking position without unstaking.\"},\"emergencyShutdown(uint8)\":{\"notice\":\"A function to be called by the EmergencyController to trigger a state change in the contract.\"},\"emergencyWithdrawLP(uint256)\":{\"notice\":\"Allows a user to withdraw their staked LP tokens during an emergency.\"},\"getEmergencyController()\":{\"notice\":\"Returns the address of the EmergencyController managing this contract.\"},\"getLPEmergencyWithdrawalSettings()\":{\"notice\":\"Gets the current emergency withdrawal settings.\"},\"getLPPositionCount(address)\":{\"notice\":\"Gets the total number of staking positions for a user.\"},\"getLPStakingPosition(address,uint256)\":{\"notice\":\"Retrieves the details of a specific LP staking position.\"},\"getPoolInfo(address)\":{\"notice\":\"Retrieves information about a specific LP token pool.\"},\"getTierInfo(uint256)\":{\"notice\":\"Retrieves information about a specific staking tier.\"},\"initialize(address,address,address,uint256,address,address)\":{\"notice\":\"Initializes the LPStaking contract.\"},\"isEmergencyPaused()\":{\"notice\":\"Checks if the contract is effectively paused, either locally or by the global EmergencyController.\"},\"setEmergencyController(address)\":{\"notice\":\"Sets or updates the address of the EmergencyController.\"},\"setLPEmergencyWithdrawal(bool,uint256)\":{\"notice\":\"Configures the emergency withdrawal settings.\"},\"stakeLPTokens(address,uint256,uint256)\":{\"notice\":\"Stakes a specified amount of an LP token into a chosen tier.\"},\"unstakeLPTokens(uint256)\":{\"notice\":\"Unstakes a position, claims any pending rewards, and returns the principal LP tokens.\"},\"updatePool(address,uint256,bool)\":{\"notice\":\"Updates an existing LP token pool's parameters.\"},\"updateTier(uint256,uint256,uint256,uint256,bool)\":{\"notice\":\"Updates an existing staking tier's parameters.\"}},\"notice\":\"Defines the external interface for the LPStaking contract.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/liquidity/interfaces/ILPStaking.sol\":\"ILPStaking\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin-contracts-upgradeable/contracts/\"],\"viaIR\":true},\"sources\":{\"contracts/access/AccessControl.sol\":{\"keccak256\":\"0x83aa16c60f0d4d2076be35ccc78c537a3d458913abf079423558d47abbf6c8da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3ecb33d3583154e6ca982b42ba3486b9b3b5b88dd1dc1bf2c5c7f25b46e21fbb\",\"dweb:/ipfs/QmUdBr88M4y2WYAbJ3PBK3vhNqdakD4T1Yp6AZQTmAE9pr\"]},\"contracts/access/interfaces/IAccessControl.sol\":{\"keccak256\":\"0xb269f738dc93ac5d5f1f539dc59a66d4f0ae4dc04787c9321b54188ea600498f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb2b0dc24fc5927061e03db9d46deccd9bd8dd4bbbc50f69c8c69039f2de8c97\",\"dweb:/ipfs/QmXrMCNK6DDwVSAEzR16P8Ud7sncLqkei8xwGHwkgzkzU7\"]},\"contracts/access/storage/AccessControlStorage.sol\":{\"keccak256\":\"0xec355d9c5339e6291c65ca7162588c0d4ed5f35565dce060b0e10080cd9c5dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e7388455721c9636daa964a00206a3acfcb794fe45174dfef59fc472c7db6a08\",\"dweb:/ipfs/QmQKM8TBzJi7HtAZ9nakDQyzQhovmY5pVAS3AE1DzcNdqC\"]},\"contracts/controllers/EmergencyController.sol\":{\"keccak256\":\"0x0687e1b7c4bd4270779477d3dfdd73c23b15bd5e2f9449c991b53707e6654a38\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9bf0b781664691106e0f59b2b8f10c17f586d2b5943dc67dea3a02ba94fb397e\",\"dweb:/ipfs/Qmarh62JnjpoBa9knyadRSiYi8x2Cv9WncHmrHTqVTTGdX\"]},\"contracts/controllers/EmergencyTimelockController.sol\":{\"keccak256\":\"0x8cd4e0db8aa28436851ff791b3ffd3b36ab719277e9aa6082de9eb392c70d4bf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f156d862745361dd8c5ad0b8a1524a7baf4e8ed797803d1eec0bdb162b2c1c5d\",\"dweb:/ipfs/QmS6pN3Fy2TRa5c1VE5rfSoDFFBBg9zHbdtbnJ5Y5rSzSW\"]},\"contracts/interfaces/IEmergencyAware.sol\":{\"keccak256\":\"0x679e6cdc57c8b9d75f1928e9767e56a9ad812900dccf3e0a92aa87814324cf5a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3219a26e6afbc417ec0e89639bbc028d99ba5fa1b32b2df25310e2df758d4b7e\",\"dweb:/ipfs/QmcLE2ZTDr15JcGkKMDDfjKEcUhuDbfMyFoG4c8CV8oPrh\"]},\"contracts/interfaces/IEmergencyController.sol\":{\"keccak256\":\"0x4f187663192cc0ca084c0df8c79a3a028f0e5f47010d84e5c06bb19ddade67e4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c4478ed09d9a42f47e29b86965936405e5a7131840af979b48dbf41da42a1470\",\"dweb:/ipfs/QmYCQBPjBHBs2y537dbtbE53nLF23mkoQRGnte97EfhSr6\"]},\"contracts/libraries/Constants.sol\":{\"keccak256\":\"0x2211bce53d31cac57006f0ba4e236884a382699daef0b928d738bbbe9769d6da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://086dc109b27a5178d1a0ae2e6ed3a92df2ca365a973bb750398f779a473b7bc5\",\"dweb:/ipfs/QmV5zbXRQC9rgGwTboWzCmPhmAyfaLCbEUbrSuXFWvj7Dg\"]},\"contracts/libraries/Errors.sol\":{\"keccak256\":\"0x17cd9c210f99c21c713da89243fff0ce87996412879bf286b821887a9a81df40\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0de62d64c4f0c7e6728306d2effb0610daa4d0ddf104b9f1c6dbd3434e1e9a5d\",\"dweb:/ipfs/QmQmV1eqBpVKVH35YqZ8B7NPoYSgdtfBAx4AvGAcvMHTiQ\"]},\"contracts/liquidity/interfaces/ILPStaking.sol\":{\"keccak256\":\"0x0cb9bd60a8a665346043b2c6e6912114bd859997080ad62ca9f230eccef9354a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f1ea774d29982cbf90be1cd84333659716955611751e5b8d374818bed85ccb56\",\"dweb:/ipfs/QmdESj8GpnZNeJxZGmUvLf5ris6mBPj9s5Wae6JC545jak\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e\",\"dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol\":{\"keccak256\":\"0x2025ccf05f6f1f2fd4e078e552836f525a1864e3854ed555047cd732320ab29b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d27f4b23c2dee42394aebaf42bf238285230f472dfd3282a39c3f000ec28214f\",\"dweb:/ipfs/QmQa3DnvccwdWJeWrjgXPnFMTWbzWQWR39hVqC7eEwo2PC\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/IERC20Upgradeable.sol\":{\"keccak256\":\"0x0e1f0f5f62f67a881cd1a9597acbc0a5e4071f3c2c10449a183b922ae7272e3f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c25f742ff154998d19a669e2508c3597b363e123ce9144cd0fcf6521229f401f\",\"dweb:/ipfs/QmQXRuFzStEWqeEPbhQU6cAg9PaSowxJVo4PDKyRod7dco\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/extensions/IERC20PermitUpgradeable.sol\":{\"keccak256\":\"0x07e881de3b9f6d2c07909f193f24b96c7fe4ea60013260f3f25aecd8bab3c2f8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1fed09b97ccb0ff9ba9b6a94224f1d489026bf6b4b7279bfe64fb6e8749dee4d\",\"dweb:/ipfs/QmcRAzaSP1UnGr4vrGkfJmB2L9aiTYoXfV1Lg9gqrVRWn8\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/utils/SafeERC20Upgradeable.sol\":{\"keccak256\":\"0x23b997be73d3dd46885262704f0f8cfc7273fdadfe303d37969a9561373972b5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d03ebe5406134f0c4a017dee625ff615031194493bd1e88504e5c8fae55bc166\",\"dweb:/ipfs/QmUZV5bMbgk2PAkV3coouSeSainHN2jhqaQDJaA7hQRyu2\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b\",\"dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.28+commit.7893614a"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"uint8","name":"emergencyLevel","type":"uint8","indexed":false},{"internalType":"address","name":"caller","type":"address","indexed":true}],"type":"event","name":"EmergencyShutdownHandled","anonymous":false},{"inputs":[{"internalType":"uint8","name":"emergencyLevel","type":"uint8","indexed":false},{"internalType":"bytes4","name":"operation","type":"bytes4","indexed":false},{"internalType":"bool","name":"allowed","type":"bool","indexed":false}],"type":"event","name":"EmergencyStatusChecked","anonymous":false},{"inputs":[{"internalType":"address","name":"user","type":"address","indexed":true},{"internalType":"uint256","name":"amount","type":"uint256","indexed":false},{"internalType":"address","name":"lpToken","type":"address","indexed":true},{"internalType":"uint256","name":"positionId","type":"uint256","indexed":true}],"type":"event","name":"LPRewardsClaimed","anonymous":false},{"inputs":[{"internalType":"address","name":"user","type":"address","indexed":true},{"internalType":"uint256","name":"amount","type":"uint256","indexed":false},{"internalType":"address","name":"lpToken","type":"address","indexed":true},{"internalType":"uint256","name":"tierId","type":"uint256","indexed":true},{"internalType":"uint256","name":"positionId","type":"uint256","indexed":false}],"type":"event","name":"LPStaked","anonymous":false},{"inputs":[{"internalType":"address","name":"oldController","type":"address","indexed":true},{"internalType":"address","name":"newController","type":"address","indexed":true},{"internalType":"address","name":"setter","type":"address","indexed":true}],"type":"event","name":"LPStakingEmergencyControllerSet","anonymous":false},{"inputs":[{"internalType":"bool","name":"enabled","type":"bool","indexed":false},{"internalType":"uint256","name":"penalty","type":"uint256","indexed":false},{"internalType":"address","name":"updater","type":"address","indexed":true}],"type":"event","name":"LPStakingEmergencyWithdrawalSet","anonymous":false},{"inputs":[{"internalType":"address","name":"user","type":"address","indexed":true},{"internalType":"uint256","name":"amount","type":"uint256","indexed":false},{"internalType":"address","name":"lpToken","type":"address","indexed":true},{"internalType":"uint256","name":"positionId","type":"uint256","indexed":true},{"internalType":"uint256","name":"penaltyAmount","type":"uint256","indexed":false}],"type":"event","name":"LPUnstaked","anonymous":false},{"inputs":[{"internalType":"address","name":"lpToken","type":"address","indexed":true},{"internalType":"uint256","name":"baseAPRBps","type":"uint256","indexed":false},{"internalType":"uint256","name":"correspondingScaledRate","type":"uint256","indexed":false},{"internalType":"address","name":"creator","type":"address","indexed":true}],"type":"event","name":"PoolAdded","anonymous":false},{"inputs":[{"internalType":"address","name":"lpToken","type":"address","indexed":true},{"internalType":"uint256","name":"poolTotal","type":"uint256","indexed":false},{"internalType":"uint256","name":"unstakeAmount","type":"uint256","indexed":false}],"type":"event","name":"PoolTotalStakedInconsistency","anonymous":false},{"inputs":[{"internalType":"address","name":"lpToken","type":"address","indexed":true},{"internalType":"uint256","name":"newBaseAPRBps","type":"uint256","indexed":false},{"internalType":"uint256","name":"correspondingScaledRate","type":"uint256","indexed":false},{"internalType":"bool","name":"active","type":"bool","indexed":false},{"internalType":"address","name":"updater","type":"address","indexed":true}],"type":"event","name":"PoolUpdated","anonymous":false},{"inputs":[{"internalType":"uint256","name":"tierId","type":"uint256","indexed":true},{"internalType":"uint256","name":"duration","type":"uint256","indexed":false},{"internalType":"uint256","name":"rewardMultiplier","type":"uint256","indexed":false},{"internalType":"uint256","name":"earlyWithdrawalPenalty","type":"uint256","indexed":false},{"internalType":"address","name":"creator","type":"address","indexed":true}],"type":"event","name":"TierAdded","anonymous":false},{"inputs":[{"internalType":"uint256","name":"tierId","type":"uint256","indexed":true},{"internalType":"uint256","name":"duration","type":"uint256","indexed":false},{"internalType":"uint256","name":"rewardMultiplier","type":"uint256","indexed":false},{"internalType":"uint256","name":"earlyWithdrawalPenalty","type":"uint256","indexed":false},{"internalType":"bool","name":"active","type":"bool","indexed":false},{"internalType":"address","name":"updater","type":"address","indexed":true}],"type":"event","name":"TierUpdated","anonymous":false},{"inputs":[{"internalType":"address","name":"lpToken","type":"address"},{"internalType":"uint256","name":"baseAPRBpsIn","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"addPool","outputs":[{"internalType":"bool","name":"success","type":"bool"}]},{"inputs":[{"internalType":"uint256","name":"duration","type":"uint256"},{"internalType":"uint256","name":"rewardMultiplier","type":"uint256"},{"internalType":"uint256","name":"earlyWithdrawalPenalty","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"addTier","outputs":[{"internalType":"uint256","name":"tierId","type":"uint256"}]},{"inputs":[{"internalType":"address","name":"user","type":"address"},{"internalType":"uint256","name":"positionId","type":"uint256"}],"stateMutability":"view","type":"function","name":"calculateLPRewards","outputs":[{"internalType":"uint256","name":"rewardsAmount","type":"uint256"}]},{"inputs":[{"internalType":"bytes4","name":"operation","type":"bytes4"}],"stateMutability":"view","type":"function","name":"checkEmergencyStatus","outputs":[{"internalType":"bool","name":"allowed","type":"bool"}]},{"inputs":[{"internalType":"uint256","name":"positionId","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"claimLPRewards","outputs":[{"internalType":"uint256","name":"amountClaimed","type":"uint256"}]},{"inputs":[{"internalType":"uint8","name":"emergencyLevel","type":"uint8"}],"stateMutability":"nonpayable","type":"function","name":"emergencyShutdown","outputs":[{"internalType":"bool","name":"success","type":"bool"}]},{"inputs":[{"internalType":"uint256","name":"positionId","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"emergencyWithdrawLP","outputs":[{"internalType":"uint256","name":"amountWithdrawn","type":"uint256"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"getEmergencyController","outputs":[{"internalType":"address","name":"controller","type":"address"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"getLPEmergencyWithdrawalSettings","outputs":[{"internalType":"bool","name":"enabled","type":"bool"},{"internalType":"uint256","name":"penaltyBps","type":"uint256"}]},{"inputs":[{"internalType":"address","name":"user","type":"address"}],"stateMutability":"view","type":"function","name":"getLPPositionCount","outputs":[{"internalType":"uint256","name":"count","type":"uint256"}]},{"inputs":[{"internalType":"address","name":"user","type":"address"},{"internalType":"uint256","name":"positionId","type":"uint256"}],"stateMutability":"view","type":"function","name":"getLPStakingPosition","outputs":[{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"startTime","type":"uint256"},{"internalType":"uint256","name":"endTime","type":"uint256"},{"internalType":"uint256","name":"lastClaimTime","type":"uint256"},{"internalType":"uint256","name":"tierId","type":"uint256"},{"internalType":"address","name":"lpToken","type":"address"},{"internalType":"bool","name":"active","type":"bool"}]},{"inputs":[{"internalType":"address","name":"lpToken","type":"address"}],"stateMutability":"view","type":"function","name":"getPoolInfo","outputs":[{"internalType":"uint256","name":"baseAPRBpsOut","type":"uint256"},{"internalType":"uint256","name":"totalStakedInPoolOut","type":"uint256"},{"internalType":"bool","name":"isActiveOut","type":"bool"}]},{"inputs":[{"internalType":"uint256","name":"tierId","type":"uint256"}],"stateMutability":"view","type":"function","name":"getTierInfo","outputs":[{"internalType":"uint256","name":"duration","type":"uint256"},{"internalType":"uint256","name":"rewardMultiplier","type":"uint256"},{"internalType":"uint256","name":"earlyWithdrawalPenalty","type":"uint256"},{"internalType":"bool","name":"active","type":"bool"}]},{"inputs":[{"internalType":"address","name":"pREWATokenAddress_","type":"address"},{"internalType":"address","name":"liquidityManagerAddr_","type":"address"},{"internalType":"address","name":"initialOwner_","type":"address"},{"internalType":"uint256","name":"minStakeDuration_","type":"uint256"},{"internalType":"address","name":"accessControlAddr_","type":"address"},{"internalType":"address","name":"emergencyControllerAddr_","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"initialize"},{"inputs":[],"stateMutability":"view","type":"function","name":"isEmergencyPaused","outputs":[{"internalType":"bool","name":"isPaused","type":"bool"}]},{"inputs":[{"internalType":"address","name":"controller","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"setEmergencyController","outputs":[{"internalType":"bool","name":"success","type":"bool"}]},{"inputs":[{"internalType":"bool","name":"enabled","type":"bool"},{"internalType":"uint256","name":"penalty","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"setLPEmergencyWithdrawal","outputs":[{"internalType":"bool","name":"success","type":"bool"}]},{"inputs":[{"internalType":"address","name":"lpToken","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"tierId","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"stakeLPTokens","outputs":[{"internalType":"uint256","name":"positionId","type":"uint256"}]},{"inputs":[{"internalType":"uint256","name":"positionId","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"unstakeLPTokens","outputs":[{"internalType":"uint256","name":"amountUnstaked","type":"uint256"}]},{"inputs":[{"internalType":"address","name":"lpToken","type":"address"},{"internalType":"uint256","name":"newBaseAPRBpsIn","type":"uint256"},{"internalType":"bool","name":"active","type":"bool"}],"stateMutability":"nonpayable","type":"function","name":"updatePool","outputs":[{"internalType":"bool","name":"success","type":"bool"}]},{"inputs":[{"internalType":"uint256","name":"tierId","type":"uint256"},{"internalType":"uint256","name":"duration","type":"uint256"},{"internalType":"uint256","name":"rewardMultiplier","type":"uint256"},{"internalType":"uint256","name":"earlyWithdrawalPenalty","type":"uint256"},{"internalType":"bool","name":"active","type":"bool"}],"stateMutability":"nonpayable","type":"function","name":"updateTier","outputs":[{"internalType":"bool","name":"success","type":"bool"}]}],"devdoc":{"kind":"dev","methods":{"addPool(address,uint256)":{"params":{"baseAPRBpsIn":"The base Annual Percentage Rate for rewards, in basis points.","lpToken":"The address of the LP token for the new pool."},"returns":{"success":"A boolean indicating if the operation was successful."}},"addTier(uint256,uint256,uint256)":{"params":{"duration":"The staking duration for this tier, in seconds.","earlyWithdrawalPenalty":"The penalty for early unstaking, in basis points.","rewardMultiplier":"The reward multiplier for this tier, in basis points."},"returns":{"tierId":"The ID of the newly created tier."}},"calculateLPRewards(address,uint256)":{"params":{"positionId":"The ID of the staking position.","user":"The address of the staker."},"returns":{"rewardsAmount":"The amount of pending rewards."}},"checkEmergencyStatus(bytes4)":{"details":"This function is typically called by modifiers within the implementing contract to guard functions.","params":{"operation":"The 4-byte function selector of the operation being attempted."},"returns":{"allowed":"A boolean indicating if the operation is permitted."}},"claimLPRewards(uint256)":{"params":{"positionId":"The ID of the user's staking position."},"returns":{"amountClaimed":"The amount of reward tokens claimed."}},"emergencyShutdown(uint8)":{"details":"The implementing contract defines how it should react to different emergency levels. For example, it might pause itself or enable emergency withdrawals.","params":{"emergencyLevel":"The system-wide emergency level being broadcast by the controller."},"returns":{"success":"A boolean indicating if the shutdown was handled successfully."}},"emergencyWithdrawLP(uint256)":{"params":{"positionId":"The ID of the user's staking position to withdraw."},"returns":{"amountWithdrawn":"The amount of LP tokens returned to the user after the emergency penalty."}},"getEmergencyController()":{"returns":{"controller":"The address of the EmergencyController."}},"getLPEmergencyWithdrawalSettings()":{"returns":{"enabled":"True if emergency withdrawal is enabled.","penaltyBps":"The penalty in basis points."}},"getLPPositionCount(address)":{"params":{"user":"The address of the user."},"returns":{"count":"The number of positions."}},"getLPStakingPosition(address,uint256)":{"params":{"positionId":"The ID of the staking position.","user":"The address of the staker."},"returns":{"active":"True if the position is active, false otherwise.","amount":"The staked amount.","endTime":"The timestamp when the stake matures.","lastClaimTime":"The timestamp of the last reward claim.","lpToken":"The address of the staked LP token.","startTime":"The timestamp when the stake was created.","tierId":"The ID of the staking tier."}},"getPoolInfo(address)":{"params":{"lpToken":"The address of the LP token pool."},"returns":{"baseAPRBpsOut":"The base APR of the pool, in basis points.","isActiveOut":"True if the pool is active, false otherwise.","totalStakedInPoolOut":"The total amount of the LP token staked in this pool."}},"getTierInfo(uint256)":{"params":{"tierId":"The ID of the tier."},"returns":{"active":"True if the tier is active, false otherwise.","duration":"The staking duration of the tier.","earlyWithdrawalPenalty":"The early withdrawal penalty of the tier.","rewardMultiplier":"The reward multiplier of the tier."}},"initialize(address,address,address,uint256,address,address)":{"params":{"accessControlAddr_":"The address of the AccessControl contract.","emergencyControllerAddr_":"The address of the EmergencyController contract.","initialOwner_":"The address of the initial owner of the contract.","liquidityManagerAddr_":"The address of the LiquidityManager contract.","minStakeDuration_":"The minimum duration for any staking tier.","pREWATokenAddress_":"The address of the pREWA reward token."}},"isEmergencyPaused()":{"returns":{"isPaused":"A boolean indicating if the contract is considered to be in a paused state."}},"setEmergencyController(address)":{"details":"This function should be access-controlled within the implementing contract (e.g., `onlyOwner`).","params":{"controller":"The address of the new EmergencyController."},"returns":{"success":"A boolean indicating if the operation was successful."}},"setLPEmergencyWithdrawal(bool,uint256)":{"params":{"enabled":"Whether to enable or disable emergency withdrawals.","penalty":"The penalty to apply on emergency withdrawals, in basis points."},"returns":{"success":"A boolean indicating if the operation was successful."}},"stakeLPTokens(address,uint256,uint256)":{"params":{"amount":"The amount of the LP token to stake.","lpToken":"The address of the LP token to stake.","tierId":"The ID of the staking tier to use."},"returns":{"positionId":"The ID of the newly created staking position for the user."}},"unstakeLPTokens(uint256)":{"params":{"positionId":"The ID of the user's staking position to unstake."},"returns":{"amountUnstaked":"The amount of LP tokens returned to the user after any penalties."}},"updatePool(address,uint256,bool)":{"params":{"active":"The new active status for the pool.","lpToken":"The address of the LP token for the pool to update.","newBaseAPRBpsIn":"The new base APR for the pool, in basis points."},"returns":{"success":"A boolean indicating if the operation was successful."}},"updateTier(uint256,uint256,uint256,uint256,bool)":{"params":{"active":"The new active status for the tier.","duration":"The new staking duration for the tier.","earlyWithdrawalPenalty":"The new early withdrawal penalty for the tier.","rewardMultiplier":"The new reward multiplier for the tier.","tierId":"The ID of the tier to update."},"returns":{"success":"A boolean indicating if the operation was successful."}}},"version":1},"userdoc":{"kind":"user","methods":{"addPool(address,uint256)":{"notice":"Adds a new LP token pool for staking."},"addTier(uint256,uint256,uint256)":{"notice":"Adds a new staking tier."},"calculateLPRewards(address,uint256)":{"notice":"Calculates the pending rewards for a specific staking position."},"checkEmergencyStatus(bytes4)":{"notice":"Checks if a specific operation is allowed based on the current emergency status."},"claimLPRewards(uint256)":{"notice":"Claims pending rewards for a specific staking position without unstaking."},"emergencyShutdown(uint8)":{"notice":"A function to be called by the EmergencyController to trigger a state change in the contract."},"emergencyWithdrawLP(uint256)":{"notice":"Allows a user to withdraw their staked LP tokens during an emergency."},"getEmergencyController()":{"notice":"Returns the address of the EmergencyController managing this contract."},"getLPEmergencyWithdrawalSettings()":{"notice":"Gets the current emergency withdrawal settings."},"getLPPositionCount(address)":{"notice":"Gets the total number of staking positions for a user."},"getLPStakingPosition(address,uint256)":{"notice":"Retrieves the details of a specific LP staking position."},"getPoolInfo(address)":{"notice":"Retrieves information about a specific LP token pool."},"getTierInfo(uint256)":{"notice":"Retrieves information about a specific staking tier."},"initialize(address,address,address,uint256,address,address)":{"notice":"Initializes the LPStaking contract."},"isEmergencyPaused()":{"notice":"Checks if the contract is effectively paused, either locally or by the global EmergencyController."},"setEmergencyController(address)":{"notice":"Sets or updates the address of the EmergencyController."},"setLPEmergencyWithdrawal(bool,uint256)":{"notice":"Configures the emergency withdrawal settings."},"stakeLPTokens(address,uint256,uint256)":{"notice":"Stakes a specified amount of an LP token into a chosen tier."},"unstakeLPTokens(uint256)":{"notice":"Unstakes a position, claims any pending rewards, and returns the principal LP tokens."},"updatePool(address,uint256,bool)":{"notice":"Updates an existing LP token pool's parameters."},"updateTier(uint256,uint256,uint256,uint256,bool)":{"notice":"Updates an existing staking tier's parameters."}},"version":1}},"settings":{"remappings":["@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/","@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/","ds-test/=lib/forge-std/lib/ds-test/src/","erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/","forge-std/=lib/forge-std/src/","openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/","openzeppelin-contracts/=lib/openzeppelin-contracts/","openzeppelin/=lib/openzeppelin-contracts-upgradeable/contracts/"],"optimizer":{"enabled":true,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"contracts/liquidity/interfaces/ILPStaking.sol":"ILPStaking"},"evmVersion":"paris","libraries":{},"viaIR":true},"sources":{"contracts/access/AccessControl.sol":{"keccak256":"0x83aa16c60f0d4d2076be35ccc78c537a3d458913abf079423558d47abbf6c8da","urls":["bzz-raw://3ecb33d3583154e6ca982b42ba3486b9b3b5b88dd1dc1bf2c5c7f25b46e21fbb","dweb:/ipfs/QmUdBr88M4y2WYAbJ3PBK3vhNqdakD4T1Yp6AZQTmAE9pr"],"license":"MIT"},"contracts/access/interfaces/IAccessControl.sol":{"keccak256":"0xb269f738dc93ac5d5f1f539dc59a66d4f0ae4dc04787c9321b54188ea600498f","urls":["bzz-raw://bb2b0dc24fc5927061e03db9d46deccd9bd8dd4bbbc50f69c8c69039f2de8c97","dweb:/ipfs/QmXrMCNK6DDwVSAEzR16P8Ud7sncLqkei8xwGHwkgzkzU7"],"license":"MIT"},"contracts/access/storage/AccessControlStorage.sol":{"keccak256":"0xec355d9c5339e6291c65ca7162588c0d4ed5f35565dce060b0e10080cd9c5dd7","urls":["bzz-raw://e7388455721c9636daa964a00206a3acfcb794fe45174dfef59fc472c7db6a08","dweb:/ipfs/QmQKM8TBzJi7HtAZ9nakDQyzQhovmY5pVAS3AE1DzcNdqC"],"license":"MIT"},"contracts/controllers/EmergencyController.sol":{"keccak256":"0x0687e1b7c4bd4270779477d3dfdd73c23b15bd5e2f9449c991b53707e6654a38","urls":["bzz-raw://9bf0b781664691106e0f59b2b8f10c17f586d2b5943dc67dea3a02ba94fb397e","dweb:/ipfs/Qmarh62JnjpoBa9knyadRSiYi8x2Cv9WncHmrHTqVTTGdX"],"license":"MIT"},"contracts/controllers/EmergencyTimelockController.sol":{"keccak256":"0x8cd4e0db8aa28436851ff791b3ffd3b36ab719277e9aa6082de9eb392c70d4bf","urls":["bzz-raw://f156d862745361dd8c5ad0b8a1524a7baf4e8ed797803d1eec0bdb162b2c1c5d","dweb:/ipfs/QmS6pN3Fy2TRa5c1VE5rfSoDFFBBg9zHbdtbnJ5Y5rSzSW"],"license":"MIT"},"contracts/interfaces/IEmergencyAware.sol":{"keccak256":"0x679e6cdc57c8b9d75f1928e9767e56a9ad812900dccf3e0a92aa87814324cf5a","urls":["bzz-raw://3219a26e6afbc417ec0e89639bbc028d99ba5fa1b32b2df25310e2df758d4b7e","dweb:/ipfs/QmcLE2ZTDr15JcGkKMDDfjKEcUhuDbfMyFoG4c8CV8oPrh"],"license":"MIT"},"contracts/interfaces/IEmergencyController.sol":{"keccak256":"0x4f187663192cc0ca084c0df8c79a3a028f0e5f47010d84e5c06bb19ddade67e4","urls":["bzz-raw://c4478ed09d9a42f47e29b86965936405e5a7131840af979b48dbf41da42a1470","dweb:/ipfs/QmYCQBPjBHBs2y537dbtbE53nLF23mkoQRGnte97EfhSr6"],"license":"MIT"},"contracts/libraries/Constants.sol":{"keccak256":"0x2211bce53d31cac57006f0ba4e236884a382699daef0b928d738bbbe9769d6da","urls":["bzz-raw://086dc109b27a5178d1a0ae2e6ed3a92df2ca365a973bb750398f779a473b7bc5","dweb:/ipfs/QmV5zbXRQC9rgGwTboWzCmPhmAyfaLCbEUbrSuXFWvj7Dg"],"license":"MIT"},"contracts/libraries/Errors.sol":{"keccak256":"0x17cd9c210f99c21c713da89243fff0ce87996412879bf286b821887a9a81df40","urls":["bzz-raw://0de62d64c4f0c7e6728306d2effb0610daa4d0ddf104b9f1c6dbd3434e1e9a5d","dweb:/ipfs/QmQmV1eqBpVKVH35YqZ8B7NPoYSgdtfBAx4AvGAcvMHTiQ"],"license":"MIT"},"contracts/liquidity/interfaces/ILPStaking.sol":{"keccak256":"0x0cb9bd60a8a665346043b2c6e6912114bd859997080ad62ca9f230eccef9354a","urls":["bzz-raw://f1ea774d29982cbf90be1cd84333659716955611751e5b8d374818bed85ccb56","dweb:/ipfs/QmdESj8GpnZNeJxZGmUvLf5ris6mBPj9s5Wae6JC545jak"],"license":"MIT"},"lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol":{"keccak256":"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794","urls":["bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e","dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv"],"license":"MIT"},"lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol":{"keccak256":"0x2025ccf05f6f1f2fd4e078e552836f525a1864e3854ed555047cd732320ab29b","urls":["bzz-raw://d27f4b23c2dee42394aebaf42bf238285230f472dfd3282a39c3f000ec28214f","dweb:/ipfs/QmQa3DnvccwdWJeWrjgXPnFMTWbzWQWR39hVqC7eEwo2PC"],"license":"MIT"},"lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/IERC20Upgradeable.sol":{"keccak256":"0x0e1f0f5f62f67a881cd1a9597acbc0a5e4071f3c2c10449a183b922ae7272e3f","urls":["bzz-raw://c25f742ff154998d19a669e2508c3597b363e123ce9144cd0fcf6521229f401f","dweb:/ipfs/QmQXRuFzStEWqeEPbhQU6cAg9PaSowxJVo4PDKyRod7dco"],"license":"MIT"},"lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/extensions/IERC20PermitUpgradeable.sol":{"keccak256":"0x07e881de3b9f6d2c07909f193f24b96c7fe4ea60013260f3f25aecd8bab3c2f8","urls":["bzz-raw://1fed09b97ccb0ff9ba9b6a94224f1d489026bf6b4b7279bfe64fb6e8749dee4d","dweb:/ipfs/QmcRAzaSP1UnGr4vrGkfJmB2L9aiTYoXfV1Lg9gqrVRWn8"],"license":"MIT"},"lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/utils/SafeERC20Upgradeable.sol":{"keccak256":"0x23b997be73d3dd46885262704f0f8cfc7273fdadfe303d37969a9561373972b5","urls":["bzz-raw://d03ebe5406134f0c4a017dee625ff615031194493bd1e88504e5c8fae55bc166","dweb:/ipfs/QmUZV5bMbgk2PAkV3coouSeSainHN2jhqaQDJaA7hQRyu2"],"license":"MIT"},"lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol":{"keccak256":"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422","urls":["bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b","dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq"],"license":"MIT"}},"version":1},"id":24}